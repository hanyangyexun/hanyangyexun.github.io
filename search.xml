<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2019豆瓣年度书单之《你当像鸟飞往你的山》</title>
    <url>/2019/12/23/11-doubandushu/</url>
    <content><![CDATA[<p>今天在浏览<a href="https://book.douban.com/annual/2019?source=navigation" target="_blank" rel="noopener">2019年豆瓣年度书单</a>，期望淘到几本值得读的书，用以弥补自己一年或几年来读书的空缺。</p>
<p>惊喜的是发现一本名为<a href="https://book.douban.com/subject/33440205/" target="_blank" rel="noopener">《你当像鸟飞往你的山》</a>提名了很多次，遂查了查，读完其简介就可以知道这是一本好书，其主题是关于教育的。</p>
<p><strong>为什么么要读书？</strong></p>
<p><strong>为什么要受教育？</strong></p>
<p><strong>我想很多很多的读书人终其一生都不知道，或者说琢磨不透为何要受教育！</strong></p>
<p>这正是昨天晚上和家里人聊天时谈到的话题。</p>
<p>可能上一辈人，包括我们这一辈人，由于家庭环境的原因，会产生以及固化读书就是为了赚钱从而改善自己的生活。</p>
<p>虽然我也许不能清楚地表达自己的观点，但是此时此刻我是不太赞同这个观点的。（因为我觉得接近30年来我都是被身边的这种观点所淹没，虽然考虑到现实情况，这观点是没问题的，但我想把它提升到另外一个高度上来理解为何受教育！）</p>
<p>下文是本书作者的观点：</p>
<blockquote>
<p>教育意味着获得不同的视角，理解不同的人、经历和历史。接受教育，但不要让你的教育僵化成傲慢。教育应该是思想的拓展，同理心的深化，视野的开阔。它不应该使你的偏见变得更顽固。如果人们受过教育，他们应该变得不那么确定，而不是更确定。他们应该多听，少说，对差异满怀激情，热爱那些不同于他们的想法。</p>
<p>——塔拉•韦斯特弗，《福布斯杂志》访谈</p>
</blockquote>
<p>以及豆瓣简介：</p>
<blockquote>
<p>★作者亲定中文版书名《你当像鸟飞往你的山》</p>
<p>人们只看到我的与众不同：一个十七岁前从未踏入教室的大山女孩，却戴上一顶学历的高帽，熠熠生辉。</p>
<p>只有我知道自己的真面目：我来自一个极少有人能想象的家庭。我的童年由垃圾场的废铜烂铁铸成，那里没有读书声，只有起重机的轰鸣。不上学，不就医，是父亲要我们坚持的忠诚与真理。父亲不允许我们拥有自己的声音，我们的意志是他眼中的恶魔。</p>
<p>哈佛大学，剑桥大学，哲学硕士，历史博士……我知道，像我这样从垃圾堆里爬出来的无知女孩，能取得如今的成就，应当感激涕零才对。但我丝毫提不起热情。</p>
<p>我曾怯懦、崩溃、自我怀疑，内心里有什么东西腐烂了，恶臭熏天。</p>
<p>直到我逃离大山，打开另一个世界。</p>
<p>那是教育给我的新世界，那是我生命的无限可能。</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/hanyangyexun/MyImages/master/11-book-cover.jpg" alt="封面"></p>
<br/>
作者简介：

<blockquote>
<p>塔拉•韦斯特弗 Tara Westover</p>
<p>美国历史学家、作家。1986年生于爱达荷州的山区。十七岁前从未上过学。通过自学考取杨百翰大学，2008年获文学学士学位。随后获得盖茨剑桥奖学金，2009年获剑桥大学哲学硕士学位。2010年获得奖学金赴哈佛大学访学。2014年获剑桥大学历史学博士学位。2018年出版处女作《你当像鸟飞往你的山》。2019年因此书被《时代周刊》评为“年度影响力人物”。</p>
</blockquote>
<p>读完上面的简介立马产生强烈共鸣，也可以链接到上一篇置顶博客。</p>
<p><strong>人的眼界是和经历有关系的</strong>。</p>
<p>一定要读读这本书，以及其英文原著。</p>
<p><strong>试图去挣脱，不要被生活所束缚，为何要被束缚，你只不过是茫茫大众中的一个单独的个体罢了。</strong></p>
]]></content>
      <categories>
        <category>life</category>
      </categories>
      <tags>
        <tag>thought</tag>
        <tag>reading</tag>
      </tags>
  </entry>
  <entry>
    <title>为什么有的人年纪轻轻却思想深度远高于常人？</title>
    <url>/2019/12/16/5-zhihu-haoju/</url>
    <content><![CDATA[<p>知乎好问题：<a href="https://www.zhihu.com/question/67473950" target="_blank" rel="noopener">为什么有的人年纪轻轻却思想深度远高于常人？</a>.</p>
<blockquote>
<p>尼采说过“当你凝视深渊的时候，深渊也在凝视你”。</p>
</blockquote>
<blockquote>
<p>那些很多思想极其有深度的人，思想带给他们的，往往是一面阳光一面悲伤。</p>
</blockquote>
<blockquote>
<p>但不管是哪一面，我们往往没看到，他们更早之前在深渊边缘摸爬滚打的样子。白天的风轻云淡，或许深夜就会掩涕长叹。</p>
</blockquote>
<blockquote>
<p>没有什么是不需要代价的，一切人格都来自于过往的经历，更何况是有深度的思想，这种无形却重于泰山的东西，怕是要看过千山万水世间百态罢。</p>
</blockquote>
<p>作者：Layne<br>链接：<a href="https://www.zhihu.com/question/67473950/answer/833637790" target="_blank" rel="noopener">https://www.zhihu.com/question/67473950/answer/833637790</a><br>来源：知乎</p>
]]></content>
      <categories>
        <category>life</category>
      </categories>
      <tags>
        <tag>thought</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/08/14/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      <categories>
        <category>initial</category>
      </categories>
      <tags>
        <tag>testing</tag>
      </tags>
  </entry>
  <entry>
    <title>换电脑重新布置Hexo</title>
    <url>/2021/08/14/31-newPC/</url>
    <content><![CDATA[<p>毕业回国，用SamSung小电脑重新布置Github + Hexo 博客。</p>
<p>虽然可能不怎么用博客，但是也不能随便丢弃。</p>
<p>网上找了帖子，跟着做没什么问题。</p>
<p>只是应该是国内的缘故，访问github可能会出现问题，导致了hexo deploy的时候会报错。Timeout等。如下图。</p>
<p><img src="https://raw.githubusercontent.com/hanyangyexun/BlogImageNew/master/31-1.png" alt="Timeout"></p>
<p>不过应该没关系，稍等一会，就可以在yexun.ml发现更新了。</p>
<p>push图片也是一样，很慢（5分钟吧）</p>
<p><img src="https://raw.githubusercontent.com/hanyangyexun/BlogImageNew/master/31-2.png" alt="zhenhuan"></p>
]]></content>
      <categories>
        <category>life</category>
      </categories>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>二零二一农历新年</title>
    <url>/2021/02/08/30-lunarnewyear/</url>
    <content><![CDATA[<p>2021年2月8日星期一，农历腊月二十七。里过年还有三天。</p>
<p>明天还得开会， 先写一个过年感想。</p>
<p>以前这个时候，差不多应该准备乘飞机回家过年了，可惜因为隔离，第一次无法回家过年去。</p>
<p>国内也有很多在外工作的人们因为“就地过年”的号召无法回家乡。今年的春运也很清淡。</p>
<p>长大了，年味淡了，无法回家过年更不谈了。好在今年这边有很多朋友们也无法回家，也还算是比较热闹。可能以后成家了，大概也是这么个样子。</p>
<p>和女朋友一起，过年也不错。</p>
<p>怀念完过年，借机总结一下最近。</p>
<p>首先就是有买了很多鞋子，很多很多的。蜜汁沉迷于匡威，一是配色好看，而是不那么贵，三主要是被测评左右。</p>
<p>不过新鞋上脚还不错，等待着那天实战测试吧。（bb evo真的好看，实战应该一般；g4也还行，就是前掌外底偏硬，鞋垫滑，期待实战检验）</p>
<p>KD 13是真的无敌，趁着好价，先屯三双。LBJ 18是一年一度非买不可的。Ascis也是被洗脑，后卫风格的glide nova, 期待实战。</p>
<p>不过不知道以后还有没有很多打球的时间。忘了AJ 35,一样的期待实战。</p>
<p>买了就买了，钱花了也就花了。平平安安健健康康的学习生活就最好。</p>
<p>最近周末一直在打麻将玩，每到周一就会很疲惫。应该是一直划水的原因吧。</p>
<p>Paper投了一个月了，应该很快出结果吧，两三个星期？</p>
<p>OPC UA真的是很厉害的一个研究应用方向。</p>
<p>时间过得真快，好在一切都好。</p>
<p>说的减肥也没希望了，不跑步就减不了肥。脸都圆了一圈。</p>
<p>2021应该是转折的一年，即将参加工作，可是还不知道去哪儿呢。</p>
<p>还是那句话，开心最重要。</p>
<p>这一年没有留下什么记忆，关于书本，影片，或其他有价值的东西。</p>
<p>静下心来，多看书，涨见识。</p>
<p>最后挑几张图片展示吧：</p>
<p><img src="https://raw.githubusercontent.com/hanyangyexun/MyImages/master/image_all/10-lunarnewyear.jpg" alt="Kobe"></p>
<p><img src="https://raw.githubusercontent.com/hanyangyexun/MyImages/master/image_all/11-lunarnewyear.png" alt="Lebron"></p>
<p><img src="https://raw.githubusercontent.com/hanyangyexun/MyImages/master/image_all/12-lunarnewyear.jpg" alt="Durant"></p>
]]></content>
      <categories>
        <category>life</category>
      </categories>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>二零二零就这样过去了</title>
    <url>/2020/12/31/29-2020conclusion/</url>
    <content><![CDATA[<p>2020年12月31日，最后一天还是在实验室度过。</p>
<p>时间度量还是有意思的，人们总是喜欢在时间节点上做一些有仪式感的事情。</p>
<p>我也总结一下这一年。</p>
<p>还记得去年这个时候在搞项目，担心过年前项目能不能搞完。</p>
<p>一月份，去了美国，那个时候国内已经有肺炎的消息了，后来报道美国那时应该也有，自己还跑去看NBA! </p>
<p>二，三月份，封城，在家里呆着，和家人度过了很多年都没有的一个多月假期。在家开会，写论文。</p>
<p>四月份，解封，可以出门了。也该上班了。</p>
<p>五，六，七月份，在家改论文，开会等。期间每周去打球。</p>
<p>八月份，韩国对湖北解禁，准备买机票回韩国！期间傍晚经常去爱拼体育馆打球。</p>
<p>九，十月份，在韩国酒店隔离，回到学校重新开始学习生活。</p>
<p>十一月份，开始再写paper，学校开始出现确诊的学生和员工。</p>
<p>十二月份，搬到学校外面住。最后一天教授看完paper，送去textcheck，完美结束2020的工作。</p>
<p>说实话，虽然是疫情，但是这一年做的事情还是很多的，开了很多很多次会议。都说这一年过得快，以前哪一年不是一样的很快呢！关键问题是：下一年会不会变得更好呢！</p>
<p>这一年，买了很多鞋子，国内和国外。有时候想：买这么多有什么用？一双七八百一千呢！</p>
<p>回来韩国，打了寥寥几次球，因为球场被封了。以至于有时候做梦都梦着在国内打球。</p>
<p>今年出现了健康问题，在家里，到处疼，主要是左右膝盖疼，应该是体重增加的原因，还是得去健身房跑步才能减脂肪，减体重。想想自己身上都是肉！现在能保证的是不让自己的心肺出问题，也就是能抗住一定强度的运动。</p>
<p>自己的能力在今年感觉没什么提高，做的都是重复的事情。还是得换到一个新地方学习新东西。</p>
<p>大家都在搞paper，评职称，说到底还是奔波前途，或钱。</p>
<p>有时候得停下来想想自己想要什么，不违初心，否者，在自己死去之时，也会有一样的想法：哎，白活了，没干自己想做的事情。</p>
<p>2021有什么目标呢：毕业？再写一个paper？减体重？ 一切都是未知数。</p>
<p>就这样吧！</p>
<p>还是忘了怎么操作Git。</p>
<p><img src="https://raw.githubusercontent.com/hanyangyexun/MyImages/master/image_all/9-2020ME.jpg" alt="新马甲"></p>
]]></content>
      <categories>
        <category>life</category>
      </categories>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>该写点什么了</title>
    <url>/2020/10/21/28-gaixiele/</url>
    <content><![CDATA[<p><img src="https://raw.githubusercontent.com/hanyangyexun/MyImages/master/image_all/7-highschool.jpg" alt="高中毕业"></p>
<p>该写一下博客了，因为博客比工作笔记正式一些。也想通过这样的方式让自己重新找到动力，要不然每天很疲惫呀！</p>
<p>回来韩国已经接近两个月了，说快也快，说慢也慢。</p>
<p>每个星期实验室还是正常Zoom视频会议，自己还是搞着研究，主要是GitHub上的项目，不停地试着reproduce，期间也遇到很多问题，解决了很多问题，只有动手操作后才能体会和学习到东西。看能不能再写一篇文章出来吧！</p>
<p>这期间和大家聚着吃了几次饭，喝了几次酒，也出去逛了街，去首尔开过一次会。实验室也出去吃了很多次烤肉。</p>
<p>对了，又买了好多双鞋子。真的是！！</p>
<p>健身房篮球场都不让用，体重增加，这可如何是好！食堂伙食就那样，吃完饭觉着不过瘾，总想吃点其他的。</p>
<p>工作日或工作或无聊中，周末就想放松，放松完了工作日就累。这似乎是某种循环。学习还是有点压力好，至少手头有点事情做。</p>
<p>本想着闲下来时准备找找工作的事情，闲下来的时候有，可似乎不用这么找，你心里已经有了选择（根据自己的情况）。</p>
<p>静下心来吧，两件事：</p>
<ol>
<li>再写一篇文章。</li>
<li>学习机器学习相关内容。</li>
</ol>
<p>最后以电视剧虎啸龙吟结尾，司马懿算出了诸葛亮在西城却围而不杀，让诸葛上演一出空城计， 失去一个一战成名的机会！</p>
<p>其子司马昭明白：“杀了诸葛亮，咱们家也完了！”</p>
<p>PS:谁都年轻过！！！</p>
<p><img src="https://raw.githubusercontent.com/hanyangyexun/MyImages/master/image_all/8-daxue.jpg" alt="高中毕业"></p>
]]></content>
      <categories>
        <category>life</category>
      </categories>
      <tags>
        <tag>思虑</tag>
      </tags>
  </entry>
  <entry>
    <title>定了</title>
    <url>/2020/08/13/27-dingle/</url>
    <content><![CDATA[<p><img src="https://raw.githubusercontent.com/hanyangyexun/MyImages/master/image_all/6-IEM.jpg" alt="飞机+IEM"></p>
<p>等不了武汉飞机开通了。</p>
<p>得知庭定了19号机票后，立马关注，决定从青岛出发最佳。</p>
<p>11号幸运的抢到了28号青岛到首尔的飞机，RMB3600。也不便宜。</p>
<p>总算是确定了，即将恢复正常生活。</p>
<p>希望之后的返韩一切顺利。</p>
<p>凑巧的是，4年前，我和风哥也是从山东踏上赴韩旅程。</p>
]]></content>
      <categories>
        <category>life</category>
      </categories>
      <tags>
        <tag>思虑</tag>
      </tags>
  </entry>
  <entry>
    <title>好消息</title>
    <url>/2020/08/10/26-goodnews/</url>
    <content><![CDATA[<p><img src="https://raw.githubusercontent.com/hanyangyexun/MyImages/master/image_all/5-HY.jpg" alt="汉阳大篮球场"></p>
<p>7号得到消息说10号韩国会取消湖北入境限制。</p>
<p>突然就得知此好消息，说明距离回归正常学习生活很近了。</p>
<p>国内自己还有什么事情没做的？</p>
<p>机票是个麻烦事，目前只有少部分城市有机票，而且得随时关注官网抢票，还贵。</p>
<p>希望不久后，武汉航班慢慢恢复。</p>
<p>看九月初能不能吧！</p>
]]></content>
      <categories>
        <category>life</category>
      </categories>
      <tags>
        <tag>思虑</tag>
      </tags>
  </entry>
  <entry>
    <title>七月下旬</title>
    <url>/2020/07/18/25-endofjuly/</url>
    <content><![CDATA[<p><img src="https://raw.githubusercontent.com/hanyangyexun/MyImages/master/image_all/4-Busan2.jpg" alt="韩国东海"></p>
<p>照片应该是在韩国东海某海滩拍摄的，记忆模糊了，误以为是第二次去釜山时所拍。</p>
<p>已经七月下旬了，希望近期会有复学好消息。</p>
<p>时间久了，想回复正常在校生活了。</p>
<p>问题一个一个的解决了，论文也接收了。</p>
<p>意味着可以开始下一步的研究了。</p>
<p>还有很多事情没做，却也不想去行动。</p>
<p>每天每天的重复着。</p>
<p>想去某个地方旅游几天了，</p>
<p>一个人也是不可能的。</p>
<hr>
<p>PS:还是得经常更新，以熟悉操作。<br>上传图片：<br><code>git pull https://github.com/hanyangyexun/MyImages.git</code><br><code>git add .</code><br><code>git commit -m xxx (not &quot;xxx&quot;)</code><br><code>git push</code></p>
]]></content>
      <categories>
        <category>life</category>
      </categories>
      <tags>
        <tag>思虑</tag>
      </tags>
  </entry>
  <entry>
    <title>六月底了</title>
    <url>/2020/06/21/24-endofjune/</url>
    <content><![CDATA[<p><img src="https://raw.githubusercontent.com/hanyangyexun/MyImages/master/image_all/3-Busan.jpg" alt="釜山某海滩"></p>
<p>已经六月底了，还是没有复学希望。</p>
<p>世界范围内的疫情应该是短期内控制不住了，欧美各国越来越严重，北京出现第二轮聚集性感染。韩国应该也不算乐观。</p>
<p>大家都麻痹了，真正在乎疫情的影响的可能就只有一个人。</p>
<p>两三年内能消灭疫情就算成功吧。</p>
<p>工作学习依旧是那样，毫无波澜。</p>
<p>生活中一个问题没解决又衍生出另一个问题。</p>
<p>总还是应该热爱和享受生活。</p>
]]></content>
      <categories>
        <category>life</category>
      </categories>
      <tags>
        <tag>思虑</tag>
      </tags>
  </entry>
  <entry>
    <title>电视剧《新世界2020》</title>
    <url>/2020/05/28/23-xinshijie/</url>
    <content><![CDATA[<h2 id="序"><a href="#序" class="headerlink" title="序"></a>序</h2><p>已经快进入六月份了，还没有丝毫韩国的消息。</p>
<p>最近看完一部电视剧（70 集，挺长的），看完觉得还不错，遂记录一下想法，顺便更新一下博客。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><ol>
<li>该剧讲述了 1949 年北平和平解放前夕，这个大背景下，发生在金海，铁林，徐天三兄弟身上的故事。整个剧可以说是一个悲剧。</li>
<li>演员演得都很到位，包括一些配角。剧本也很好，几乎没什么槽点。</li>
<li>为什么喜欢这个剧，一是演员的实力，而是该剧带一点诙谐幽默，比如里面的一些方言（河北，上海，四川，陕西等），小混混的戏份，以及该剧的一条贯穿始末的线索：谁是小红袄？</li>
<li>就里面的人物来说，每个人形象都很饱满。<blockquote>
<p>金海是可怜的，作为社会中层人物，对小混混打压，对自己的兄弟包容，对国民党上层人物，他也只不过是一颗棋子。这么讲义气的人最后还是死在了自己的兄弟手上，临了还想着帮自己兄弟逃脱。铁林是可怜的，一心只想出头，甚至不贪财，身边的人都觉得他是窝囊废，尤其是他自己的老婆，我觉得正是身边的人对他的这种看法，导致他后面的一系列悲剧行为。杀了兄弟的父亲，也杀了自己的大哥，最后被自己兄弟杀死。徐天是可怜的，直到最后才找到一直苦苦寻找的杀了自己未婚妻的“小红袄”，还失去了父亲，大哥，最后杀自己二哥。田丹是可怜的，为了新世界的建立不惜生命，一直相信自己的以前的搭档冯清波，最后爱上一个符合新世界的徐天。虽然短短一段时间内他们一起经历过生死，这一点也是本剧唯一槽点，因为这两人根本不符，她遇到的志同道合的人应该很多，正是这样她才可怜。其实自己也是别人的工具而已。冯清波可怜，作为党国的刀子。柳如丝可怜，爱一个没感情的刀子。最可怜的实属铁林，最后走歪了，出头了。失去了身边所有人，还是得不到妻子的”瞧得起“，甚至最后举报铁林行踪，并来一句：“我还是喜欢以前的生活”。可以说正是她逼的铁林走歪。</p>
</blockquote>
</li>
</ol>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>没琢磨明白这个剧想表达什么，导演想通过这几个人的命运告诉我们什么道理？</p>
<p>总之，这是一个好剧，包括描绘了北平当时的情景，服装造型很有年代感，为张鲁一，尹昉演技点赞，孙红雷也只适合演大哥这种人设了。哈！</p>
<p>附两张截图：</p>
<p>这是贯穿铁林一生的中心句：</p>
<p><img src="https://raw.githubusercontent.com/hanyangyexun/MyImages/master/image_all/1-xinshijie.png" alt="铁林1"></p>
<p>这是他死时说的：<br><img src="https://raw.githubusercontent.com/hanyangyexun/MyImages/master/image_all/2-xinshijie1.png" alt="铁林2"></p>
<p>PS：本文编辑用的新工具“链滴笔记”。</p>
]]></content>
      <categories>
        <category>life</category>
      </categories>
      <tags>
        <tag>电视剧</tag>
      </tags>
  </entry>
  <entry>
    <title>Git and Vim</title>
    <url>/2020/05/08/22-git-and-vim/</url>
    <content><![CDATA[<h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><p>刚刚在GitHub上布置自己的图床时，遇到一点问题，原因在于自己对Git命令不熟不了解。</p>
<p>以前是直接将图片拖到Git的仓库里面，今天想在该仓库里建一个文件夹，可惜没有这个操作，只能建立文件。</p>
<p>于是只能在本地建立，再同步到Git。问题来了：</p>
<p>Git仓库和本地文件夹不一样怎么办？网上查<a href="https://blog.csdn.net/liman65727/article/details/81772736" target="_blank" rel="noopener">如何同步</a>：</p>
<pre><code>1.git fetch &lt;remote&gt; 将远程代码下载到本地。(即进入MyImages(master), git fetch https://github.com/hanyangyexun/MyImages.git)
2.git pull &lt;remote&gt; 将远程分支与本地分支同步，并且合并。
3.之后可以看到本地文件夹中已经有了远程仓库的文件，然后可以开始提交代码了.
    git add .
    git commit -m &quot;xx&quot;
    git push</code></pre><p>每次同步遵循这几步即可。(好像重复23即可，pull=fetch+merge)</p>
<p>更新：直接执行3即可。</p>
<p>需对<a href="https://blog.csdn.net/qq_36113598/article/details/78906882" target="_blank" rel="noopener">Git命令</a>更加了解！</p>
<h2 id="Vim"><a href="#Vim" class="headerlink" title="Vim"></a>Vim</h2><p>Vim编辑器有三种模式：</p>
<pre><code>i 进入编辑模式
esc 退回命令模式
：wq 尾行模式 保存并退出</code></pre><p>由于用的不多，自己老是忘记。</p>
<p>PS:上传图片时，记得先预览图片方向，防止旋转。</p>
]]></content>
      <categories>
        <category>web tech</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>Vim</tag>
      </tags>
  </entry>
  <entry>
    <title>关于照片</title>
    <url>/2020/05/08/21-guanyuzhaopian/</url>
    <content><![CDATA[<p>图片往往比文字能传达的信息多，图片的力量是强大的，给人视觉的冲击。</p>
<p>可能我们在生活中见到的图片多了。尤其在手机上，各种APP上，便很难感受到图片的美。</p>
<p>在浏览一些博客时，往往会很有兴趣点开作者的相册，看看作者去过哪些地方。而往往这些照片会给人一种很舒服的感觉，完全和手机小屏幕上不一样。</p>
<p>以下便是我的一些照片，仅供欣赏。(目前正在将QQ相册里面的照片下载到手机，以便保存。)</p>
<p>每一张出自于自己手的照片，多年后看起来都是清晰的回忆！</p>
<p>图1-5为意大利篇；6-10为2018年手机照片。</p>
<p>1.去银行换的欧元纸币：</p>
<p><img src="https://raw.githubusercontent.com/hanyangyexun/MyImages/master/blog-21/QQMail_0.png" alt="欧元"></p>
<p>2.去错了的布雷西亚大学某厅的天花板画：</p>
<p><img src="https://raw.githubusercontent.com/hanyangyexun/MyImages/master/blog-21/QQMail_1.png" alt="天花板"></p>
<p>3.傍晚的都灵某广场：</p>
<p><img src="https://raw.githubusercontent.com/hanyangyexun/MyImages/master/blog-21/QQMail_2.png" alt="都灵广场"></p>
<p>4.晚上七八点钟的都灵街道：</p>
<p><img src="https://raw.githubusercontent.com/hanyangyexun/MyImages/master/blog-21/QQMail_3.png" alt="都灵街道"></p>
<p>5.都灵某汽车博物馆的汽车：</p>
<p><img src="https://raw.githubusercontent.com/hanyangyexun/MyImages/master/blog-21/QQMail_4.png" alt="汽车博物馆"></p>
<p>6.汉阳大学第四工学馆，我工作和学习的地方：</p>
<p><img src="https://raw.githubusercontent.com/hanyangyexun/MyImages/master/blog-21/QQMail_5.png" alt="汉阳大学"></p>
<p>7.18年中秋釜山之行：</p>
<p><img src="https://raw.githubusercontent.com/hanyangyexun/MyImages/master/blog-21/QQMail_6.png" alt="釜山景点"></p>
<p>8.拍于釜山某商店门口：</p>
<p><img src="https://raw.githubusercontent.com/hanyangyexun/MyImages/master/blog-21/QQMail_7.png" alt="有意思的物件"></p>
<p>9.釜山某景点提示牌：</p>
<p><img src="https://raw.githubusercontent.com/hanyangyexun/MyImages/master/blog-21/QQMail_8.png" alt="阶梯"></p>
<p>10.安山某公园的亭子：</p>
<p><img src="https://raw.githubusercontent.com/hanyangyexun/MyImages/master/blog-21/QQMail_9.png" alt="安山景色"></p>
]]></content>
      <categories>
        <category>life</category>
        <category>album</category>
      </categories>
      <tags>
        <tag>照片</tag>
      </tags>
  </entry>
  <entry>
    <title>远程操作博客</title>
    <url>/2020/04/30/20-remote-test/</url>
    <content><![CDATA[<p>马上就进入五月份了，在家呆了一百多天，依然没有回到韩国的确切时间！</p>
<p>现在试试远程使用teamview来写博客，也算是更新一下。</p>
<p>回到韩国再将自己在疫情这段时间的记录上传。</p>
<p>BTW，刚看了一下之前的博客，感觉很陌生，果然思想遗忘的速度很快！</p>
<hr>
<p>下面是添加图片：</p>
<p>尺寸修改：（不能居中？）（可以居中，只是markdown没渲染出来）</p>
<img src="https://raw.githubusercontent.com/hanyangyexun/MyImages/master/me-kobe-jersy.jpg" width = "270" height = "480" div align=center />
默认：

<p><img src="https://raw.githubusercontent.com/hanyangyexun/MyImages/master/me-kobe-jersy.jpg" alt="kobe&#39;s jersey"></p>
<p>准备添加一个自己的图片和视频，搞了一下，发现以下问题：</p>
<ol>
<li>以前是先把图片存入本地电脑然后commit到git仓库（参见以前博客），现在是可以直接手动上传到Git仓库，然后直接复制链接就行了（搞半天搞糊涂了，还尝试把Git克隆到本地！！）。</li>
<li>复制链接时应该用的是浏览器打开图片时的，而不是打开之前的。</li>
<li>视频的插入不是那么容易，因为博客没安装视频音频播放器（除非YouTube等<strong>外链</strong>），这个以后再弄吧。</li>
<li>不练果然手生。</li>
</ol>
<video id="video" controls="" preload="none" poster="http://img.blog.fandong.me/2017-08-26-Markdown-Advance-Video.jpg">
<source id="mp4" src="http://img.blog.fandong.me/2017-08-26-Markdown-Advance-Video.mp4" type="video/mp4">
</video>

<p>视频出自<a href="http://blog.fandong.me/2017/08/25/Markdown-Advance/" target="_blank" rel="noopener">这里</a>。</p>
<p><strong>更新</strong></p>
<p>关于问题2， 应该不是视频播放器问题，因为markdown支持video标签插入视频。参见<a href="https://www.dazhuanlan.com/2019/10/09/5d9de855688b9/" target="_blank" rel="noopener">这里</a>。</p>
<p>这样问题转为，如何把自己的视频生成外链播放，方法可以有：比如上传到YouTube或抖音，即可得到外链。</p>
<p>亲测不行，无法生成mp4文件。</p>
]]></content>
      <categories>
        <category>life</category>
      </categories>
      <tags>
        <tag>COVID-19</tag>
      </tags>
  </entry>
  <entry>
    <title>Trip to USA</title>
    <url>/2020/01/17/19-trip-to-USA/</url>
    <content><![CDATA[<p>从2020年1月6日到12日（韩国时间），由于项目需要，参加了位于美国加州伯克利的IEC TC 65 JWG 17的会议。</p>
<p>现简短记录一下在这接近一周的旅程所见所闻和所想，防止遗忘。</p>
<p>1月6日， 晚上八点多的飞机，所以四点半左右就从实验室出发了， 到达T2后取机票， 韩国工作人员询问我要到达的城市，然后简单的问了几句（居然还有盘查？）。过完安检后与Lisa会合，两人去到一个类似VIP的自助餐Lounge（在这里感谢Lisa的积分还是券？），里面吃的东西不多，但是有中西餐，中餐的炒饭和基围虾味道还不错，多吃了一点，就不打算吃飞机餐了。里面有很多外国人，也有一些韩国人带着老婆孩子。吃完随后就准备登机了。</p>
<p>感想：只有有钱才可以体验到普通人体会不到的生活。</p>
<p>飞机大概飞了九个半小时左右，在飞机上坐着贼难受，几乎没睡着，而且当时位子只能选中间的，我估计是买机票时买的便宜机票吧。</p>
<p>到了旧金山机场，是美国时间下午一点多，搭乘机场BART, 买票上车， 车上很破旧，看得出有很多年的历史了，基本上和欧洲的列车车厢差不多， 中途转了一次车，到达Downtown Berkeley 站下车，每一站的站台看起来都很冷清空旷，可能是只有底层的人会坐这些交通工具，有钱有身份的都自己开车了吧。</p>
<p>一出站走几步就可以看到我们的酒店Hotel Shuttuck Plaza, 大堂里一股不知道是什么味道，或许是香水吧！到前台check in，领到房卡， 进入房间放下行李，床看起来有点小， 休息了一下就出去转转了。</p>
<p>出去应该是到了四五点的样子，已经有夕阳了， 找到了Lisa上次来伯克利去过的“小湖南”餐馆，点了两个菜，最后结账时，看了手写的菜单，问了才知道有加州的税， 有小费。加一起大概占了20%。这个时候才意识到原来美国有很重要的“小费文化”。</p>
<p>之后的去餐馆吃饭都要给小费的。回到韩国之后，查了才知道美国的服务业没有基本工资，服务员都是靠小费当收入的。据说一天的小费可以达到200美元，好高啊！</p>
<p>吃完饭去逛了一个超市，Lisa买了些水果，分了我一些，那个小的苹果还挺好吃的。逛完会酒店就准备睡了。</p>
<p>1月7日， 晚上陆陆续续醒了睡，睡了醒，时差还没倒过来，晚上睡觉发现那个床是真的小，脚都伸不开，于是早上起床后去大堂申请换了个房间到4楼，房间大很多，床也大不少。中午还是准备出去吃饭，伯克利附近的中餐还是多，找到一个面馆，点了一碗“武汉热干面”， 上来之后发现面居然是那种手工宽面，芝麻酱也不多，干脆当一碗面吃吧。不过Lisa的牛肉面里面的牛肉是真的多，味道也不错，看来美国的牛肉很便宜！</p>
<p>吃碗面就到所谓的“加州大学伯克利分校”里面逛了逛，一进校园，郁郁葱葱，发现校园里面和外面的公共场所有很大区别，大树，草坪，蓝天，白云，建筑，图书馆，各种Hall, 和外面简直就是两个世界。校园里面人很少，可能是放假的原因，也可能是人都在室内工作。偶尔可以看到一些亚洲面孔的人，这学校应该有来自各个国家的研究人才吧。</p>
<p>学校里面还有很多动物，因为学校在山上面，树多草多，没人猎杀动物。看到很多只松鼠，又肥又大，他们都不怕人，还主动凑过来貌似想要东西吃。有一天晚上还看到了一个大型动物，虽然没看清，类似熊~~，不过他们应该不会袭击人吧！</p>
<p>中午时间，伯克利的气候还是有点凉，凉风拂面，甚至会给人一种早上七八点的感觉。很舒服，没有困意。拍了些照片，到了三四点就回酒店了，睡了一下，算是倒时差吧。晚上约了和魏老师一起吃晚饭，没想到居然还有教授。四人行，教授点名想吃中餐， 去到一家Great China，星期二居然休息，于是转到另外一家“眷湘”， 一人点了一个菜，不知道是不是正宗的湘菜，但是味道还是不错的，卖相也好，分量也够，四人吃完加小费一共有80刀了，还是好贵啊，美国消费真的是高。教授付的钱，哈哈哈！</p>
<p>吃完逛了逛，还得回酒店开lab meeting，也是不容易。到了晚上还是睡觉。第二天得准备开会了。</p>
<p>1月8日，晚上睡得还挺好的，起床吃了点从韩国带的面包，准备下楼会合，打的去开会的地点，本来开会地点是在伯克利学校的，但是据说是Rolf 错过了付款的时间，导致没丁成功，于是改到一个租的类似办公的地方。四人坐的Uber（Lisa call的），来到会议室，四个日本人已经早早到了，相互介绍了一波，其实我还是应该把自己的名片带着和大家交换，就算自己只是一个博士在读学生。</p>
<p>开会还是按照流程讨论问题，在接下来的两天的讨论中，真的感触很多：</p>
<p><strong>这些年纪很大的IEC 专家，主席秘书等等，都很专业，细细的讨论怎么去处理comments，怎么说合适，怎么修改合适。甚至包括一些英语的措辞等，都讨论的很深入。自己从心里佩服他们对他们工作的热爱以及投入，丝毫不感到疲倦。</strong></p>
<p><strong>个人一个很深的感触就是：我自己以后可能就会和这些人一样的做着差不多的事情，这些都是可以预想到的， 这样的生活工作有挑战吗？所以，这样真的是我想要的吗？都可以看到未来了，我还要走这条路吗？似乎也没有其他的选择。</strong></p>
<p>午饭吃的是真的难吃，我已经尽量挑选合适吃的了，一个墨西哥卷，没想到吃到想吐，为了填饱肚子还是勉强吃了一半。卷饼里面是大黑豆，大米，鸡肉，味道有点咸，没有其他味道了。类似猪食~~。</p>
<p>开完会回到酒店教授提议还是一起吃晚饭，魏老师嘀咕说今晚有NBA啊，这几天只有今天有比赛，我听了连忙说，对对对，只有今天，要一起去吗！随后魏老师向教授提出今天我们去看球，于是晚餐就解散了。</p>
<p><strong>NBA</strong><br>魏老师和我休息了一下，就出发准备去球场了，如果是我一个人的话，我是不会去看球赛的，因为自己没有经验，所以下次自己就可以一个人去看球了。坐车来到勇士的新球馆chase center（大通中心），真的是激动，可能是球赛快开始了，观众已经进场，外面没很多人，但是依然有很多拍照合影的人。按照计划，我们要找票贩子买票，票贩子不多，最后找到两个黑大个，102区的座位他们开口要200刀一人，之前我的预期是找到一个中间的位子话200刀左右，但是魏老师说买个最上面的，几十刀就够了。于是我的内心标准也下降了。和黑大个砍价，一开口80， 他们不干，要160,120等，过了一会，比赛开始了，我们找不到人，于是又找到他们，说半天用80一张的价格拿下，最后给钱时，他们还想耍赖不给我们找钱，最后魏老师抓着不放，我们还是拿到了找零，那哥们还没完，还要钱，给他几美元，他不要，我们就趁机溜了，过安检进球馆。这其实是双赢，因为比赛开始后，可能就没人买票了， 他们一分钱也得不到。80买到中间位置的票还是很划算的。</p>
<p>进去后，有人给发加油的毛巾，马上氛围就感受到了。找到自己座位的入口，到入口附近就听到了球场的电视上熟悉的声音，迫不及待就想冲过去了。魏老师说别着急，才刚开始呢。</p>
<p>映入眼帘的是聚光灯的球场以及上方的立体大屏幕，眼球立马被吸引，球员在场上奔跑，球衣上的背号清晰可辩，上方的大屏幕看着更是清楚，其实看实际的球场全景时，球员并没有跑的很快，运球也没电视上的那么快，只是在屏幕上看着快而已，不过还是比一般的要快，哈！一边看球一边拍照，可惜勇士球员我基本上都不认识，双方命中率也不高， 整场比赛乏善可陈，精彩度一般。中间位子的视角刚刚好，我觉得坐完中间就不想再坐靠上面的位子了。虽然前面还有一些空位，但是主场球迷真的是很热情，主队进球就欢呼，字母哥拿球就嘘声四起，被氛围影响，本来是打算看字母哥的，无奈自己也跟着嘘！整场比赛很快，可能是比赛不焦灼。期间发现了库里穿着西装坐在板凳席，有时候还甩毛巾欢呼。只是没看到汤普森？？</p>
<p>比赛无悬念的结束后，我们就跑到下面去拍照去了，只能下到大概在十排左右的距离， 可以清晰地看到库里和字母哥拥抱。字母哥还接受采访，把球鞋送给小朋友等等。第一次看球星其实也没那么激动。他们就站着在那里而已。值得提的是暂停时啦啦队的表演也是很到位的。看完就返回酒店了，回来已经十一点多了。</p>
<p>1月9日，照常开会， 中餐特地去的一个墨西哥餐馆，人很多，菜单是墨西哥文，也看不懂，跟着点了两个taco,对，应该就是老詹的taco tuesday 那个，一个是包的鸡肉，一个包的猪肉，taco面皮不怎么好吃，猪肉还可以吃下去，鸡肉就做的非常难吃了。这让亚洲人在美国怎么活！</p>
<p>下午很早就结束了会议，日本的队伍还要继续讨论问题，韩国的队伍就提前走了，下午和Lisa还是去到伯克利校园逛了逛。</p>
<p>晚上，四人还是吃的中餐，去到Great China，人好多，大家说这是美中餐。菜上上来吃着像安山的东北菜， 还行吧。是魏老师付的钱， 最后服务员居然还跑出来说：小费没结啊！晕倒。</p>
<p>吃完饭逛了逛就回酒店了，明天还有一天自由活动的时间，想着去哪里玩玩，魏老师发来消息说去“恶魔岛”， 这是一个监狱，瞬间没有了心情，于是改到其他可以逛街的商圈。</p>
<p>1月10日， 早上十一点半出发，去到那家面馆，每人吃一碗面（Lisa给的钱）当做中午饭，然后坐地铁， 很快就到达了所谓的市区，马上就热闹起来，高楼大厦，于是魏老师开始买化妆品包包等，然后来到“联合广场”， 没什么惊讶的，又在周边到处游走，看到一家苹果店，给玉庭带了一个airpod pro,1800刀，东西很好就是好贵。最后来到San Francisco Port，旧金山码头，有轮渡可以到达对岸，说轮渡也是一种公共交通工具，于是就想着通过轮渡回到伯克利，经过打听，说有，但是到达指定地点并没有发现丝毫信息有回伯克利的轮渡，于是灰溜溜的去坐地铁。晚上吃什么？魏老师提议西餐，Lisa和我想吃中餐，这可能是身在中国和韩国吃的东西不一样。最后还是去到眷湘吃中国菜，两次点的菜都不一样，不过味道真的是不错，最后是AA结账，（应该是两位考虑到我还是一个学生！），吃完逛逛超市就回酒店，道别后，第二天都准备离开了。</p>
<p>1月11日， 早上起个大早赶十一点半的飞机，前两天买的地铁卡价值三美元也退不了。机场确实和仁川比不了，来到候机口，准备找一点吃的东西，毕竟上飞机后一会才能有吃的。旁边有卖汉堡，接近100人民币一个，不过因为不知道到底是不是好吃的，不敢随便买，又看到有卖Asian Noodle的，看了实物，类似于炒面，于是点了一份，不过没想到直接拿到一份小盒快餐面，居然还是冰的，勉强吃完算填个肚子吧。</p>
<p>之后就是登机了，一上飞机睡了一会，然后就开始玩了，看“闯关东”，还是很期待该电视剧的结局的。</p>
<p>1月12日，飞机落地已经是韩国时间5点半，跟着Lisa坐车回来，车开了一个小时左右，还是挺远的，主要是从仁川港出来开了比较久。</p>
<h2 id="感想："><a href="#感想：" class="headerlink" title="感想："></a>感想：</h2><p>关于英语，在以英语为母语的国家，你就会看到大街小巷都是英语，而且你应该不用想着去翻译这英语是什么意思，因为你可以根据实际的物体来理解它，比如，ferry就是轮渡，wharf和pier就是码头(这两者应该还是有区别的)，我想这大概是语言或者文字所应该传递的信息。所以关于英语教育，直接在生活中安排一些英语环境，是可以更好的影响孩子的。</p>
<p>关于工作，第一，如何去十年如一日的热爱自己的工作和所作的事情呢？ 第二，应该百分之两百地去对待自己做的每一件事情，甚至每一个细节。</p>
<p>会议期间，偶然发现，Rudy在其他人谈话时，会打开text来记录一下关键的信息，我想他会后应该会根据记录重新回忆别人所说的话。这是一个好习惯。</p>
<p>关于人生经历，一句话，<strong>你的眼界决定你的抉择，而眼界和经历是密切相关的。</strong>所以，你经历过高山，就会去往更高的山，你只经历过丘陵，你就可能一直困在丘陵里面。</p>
<p>想到什么再补充…</p>
]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>USA</tag>
        <tag>trip</tag>
      </tags>
  </entry>
  <entry>
    <title>准备IEC 62872-2会议决议</title>
    <url>/2020/01/03/18-IEC-62872-2/</url>
    <content><![CDATA[<p>在去伯克利开WG 17会议之前的一个星期主要是处理收到的comments，按照教授的要求就是，在开会之前就应该准备好comment resolution，然后再在会上讨论。</p>
<p>不知道以前的惯例是怎样，这个是我们自己的项目然后拿到WG 17来做，可以看出教授的要求很严，不停地和他通邮件确定最后的版本（主要由Lisa，WeIMin和我来准备resolution，教授也亲自给出了自己的建议）。</p>
<p>总结就是：</p>
<p>我们自己拿出去的东西，要给别人看，或者要一起讨论的东西，一定要准备的十全十美（包括投出去的论文，以及展览等）。</p>
<p>不得不说要求确实严格，改的过程也可以看出Lisa对任何事情也是非常认真的对待，想到有时候自己的态度，得向此两位好好学习！</p>
]]></content>
      <categories>
        <category>PhD</category>
      </categories>
      <tags>
        <tag>thought</tag>
      </tags>
  </entry>
  <entry>
    <title>从“时间的朋友”到“极客鞋谈”</title>
    <url>/2020/01/02/17-jikexietan/</url>
    <content><![CDATA[<p>今天在看知乎上<a href="https://www.zhihu.com/question/308014777" target="_blank" rel="noopener">如何看待罗振宇2020年《时间的朋友》跨年演讲？</a>时，联想到中国和其他国家的区别（如韩国和日本），联想到极客鞋谈的牛哞哞做过的几期关于去日本旅游的视屏，遂想写下点什么，防止遗忘。</p>
<p>其实昨天试图想找到该跨年演讲视屏看看，只可惜没找到，只看到一段中国人的结网能力的讲述。但是并没发现罗振宇有多深得观点和见解。</p>
<p>我很赞同知乎上的一个评价：</p>
<blockquote>
<p>建议高认知，以及平日里就经常学习的知识分子不必观看，这演讲适合平日里不怎么学习行业以外的知识和不怎么看书的群体。我也终于明白为什么罗胖上奇葩说的时候会被许多学员挤兑了。奇葩说里的这些人，基本都是985，211毕业的人才，有的还是世界顶尖学府出来的。当然会对罗胖这种“快餐式知识”感到戏谑。姑且就算是比微信公众号好很多的知识吧。这些学霸多年来的学习习惯积累下来的深度学习能力。对于得到这种浮与表面的大众知识，是很难打动他们的。一开始我还为罗胖抱不平，后来随着自己也开始拿起书本阅读的时候。看来是我错了。卸载得到吧，下载微信读书吧。知识不在的得到里，知识依然存在书本里。</p>
</blockquote>
<blockquote>
<p>作者：安扣<br>链接：<a href="https://www.zhihu.com/question/308014777/answer/958603464" target="_blank" rel="noopener">https://www.zhihu.com/question/308014777/answer/958603464</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>
</blockquote>
<p>中国和其他国家的差别，这里不好做出论断，自己亲身真正去体会过的人才有体验和发言权吧，书上看的和听别人说的总归不是自己的经历。</p>
<p>但是有一点是事实：中国是一个发展中国家，别人是发达国家，高度发达国家；中国是社会主义国家，别人是资本主义国家。</p>
<p>知识从书本中获取，观点在生活中形成！</p>
<p>彩蛋：</p>
<p>联想韩国电影和中国电影的不同之处。</p>
]]></content>
      <categories>
        <category>life</category>
      </categories>
      <tags>
        <tag>thought</tag>
      </tags>
  </entry>
  <entry>
    <title>看十三邀有感</title>
    <url>/2019/12/30/16-shisanyao/</url>
    <content><![CDATA[<p>今天在YouTube偶然点开“十三邀”中<a href="https://www.youtube.com/watch?v=gwQPHzReqMU" target="_blank" rel="noopener">一期</a>对话经济学者吴晓波，好奇和学经济的人对话是一种怎样的场景。</p>
<p>节目中走访了位于杭州的几家企业，有服装公司（片断女装），有食品公司（百草味）。这些公司应该是属于中小企业，但是其共同点是都具有完整的各个部门，比如广告，前端，后台数据处理。虽然他们可能不是那么的大，但是都挺齐全，保证一个公司在“互联网+”上正常运行。<strong>也就是说，无论是什么业务类型的公司（包括网上的一些球鞋评测小公司），都是由若干个部门（或者若干个不同角色的人）结合在一起，向着同一个目标（赚钱）贡献自己的力量。</strong></p>
<p>另外一个共同点是，在现在这个信息时代，需要强大的计算力来获取有价值的信息（相比以前是通过电话或者手记等方式进行数据分析），以此来保证公司高效的运行，从而创造更大的利润。</p>
<p>视屏看到一半，自己的内心像被什么震动了一下。对于一个信息方向的博士在读生来说，完全可以理解上面讲的两点，然后自然而然的就有了“创业就是这样啊，很简单啊”这样的想法。虽然并没有那么简单！</p>
<p><strong>但是我想创业也许是以后的一个选择呢，，因为这可能是读博士的一个好处吧，你不会对新鲜的以前没经历过的事情感到惊奇，更不会感到害怕，因为你知道多花心思是一定可以把问题解决的。</strong></p>
]]></content>
      <categories>
        <category>life</category>
      </categories>
      <tags>
        <tag>YouTube</tag>
        <tag>对话</tag>
      </tags>
  </entry>
  <entry>
    <title>Summary of 2019 Plug-and-Produce Project</title>
    <url>/2019/12/29/15-PnPproject-summary/</url>
    <content><![CDATA[<p>近一周，PnP项目终于到了尾声，PnP的基本效果（教授想要的）可以实现了，就差web UI的实现。前一段时间还在担心项目完不成导致过年回家休假受到影响。在紧锣密鼓的测试之下，现在心里一块石头总算落地。</p>
<p>我觉得现在是时候记录一下关于这个项目的所有，以便日后回顾起来有点笔记作为参考。说来奇怪，总觉得自己可以记住经历的所有事情的细节，所以不想记录，可事实是时间一久，所有记忆就会淡化。所以记录是必要的。</p>
<p><strong>这里我尽量只记录事情发展以及项目经验， 不掺杂表达自己的想法。</strong></p>
<h2 id="动机"><a href="#动机" class="headerlink" title="动机"></a>动机</h2><p>时间退回到2018年12月圣诞节自由，IEM杂志送来审稿结果，在结果里面一位审稿人提到了Plug-and-Produce这个概念以及一份文档，这份文档之前已经学习过，在我准备好回复，提交终稿之后，教授提出下一步的研究就是PnP 以及composite component，先从PnP开始。</p>
<p>在中国过年休假时，收到教授邮件，提出使用3个不同厂家的robot来实现PnP，可能他是在沈阳新松看了别人的生产线还是怎么的，一心想自己做这个。</p>
<p>休假来之后，3、4月份开始着手购买robot，并阅读相关PnP的论文。</p>
<p>到了7月份左右，参加KUKA的培训（韩语）。并且看一些KUKA文档，熟悉工业机器人的术语。</p>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>十月份，KUKA机器人才运达实验室，安装好基座后，<strong>首先的一个目标是让机器人动起来。</strong>然而达到这个目标很是曲折，因为是韩国人负责安装的，我并不知道，安装到什么程度了，什么东西没装，什么接口没连接，直接导致我无法按照操作手册进行操作，最后直接问韩国人才在T1模式下手动操控机器人。</p>
<p>接着问题就是<strong>控制器X11 I/O安全接口</strong>,好像是如果接线没接好，是不能再Automation模式下自动运行的。为此在网上查找了很多很多（有一个叫kukarobotforum的网站，一些专家会在上面解答问题），以及让韩国人询问kuka公司如何接线X11,但是收到接线图后，开始接线，接线又是一个大问题，要进行焊接，在一个小小的55针connector上（诶，这个好像是七八月份的事情！），又没有很好的焊枪，如何焊好！就算自己勉强焊好，以后除了问题，怎么办！在中国的话，淘宝买一个免焊接的55针连接头简直太简单，可是韩国没有！而且由于缺乏经验，胡乱使用了<strong>用于焊接的一根一根的针接头</strong>，还好并没有太破坏，最后意识过来其作用时，还可以再用。</p>
<p>回到接线，公司提供的接线图是不对的，而且没有清晰地标注，很是让人心烦，因为担心接错线导致机器人故障。最后在网上找到一个帖子，别人手把手的告诉怎么接X11口，遂按照着同样操作一波，终于x11口接完控制器没报错。而且也没有焊接，只是用针接头接到connector上。</p>
<p>事后发现自己操作的是叫做<strong>短接</strong>，公司提供的接线图应该是要外接一个<strong>紧急停止按钮</strong>。这就是区别所在。</p>
<p><strong>还有，不要一味的遵照别人的说法去做事情，除非是别人做过同样的事情。在那做种不可恢复的动手前最好自己先分析分析，不知道的接头，连线先网上查一查。不要盲目的抱着尝试的心态瞎操作。</strong></p>
<p>再一个就是将robot送往JS tech设计公司进行组装，最后做成三个机器人加一个转台的系统，包括加传感器和信号灯，已及抓爪。<strong>说到这个系统，真的是，所有的事情都可以说是我一个人在设计，都是我在想着怎么更好的展示这个系统。没人给你需求，没人告诉你这个系统该是一个什么样子。</strong>话说回来，送去之后，自己就觉着没什么事了，可是事情远没这么简单。</p>
<p>和韩国成员沟通确实是一大问题，他只一句话，不，是几个词，告诉你设计公司要什么，并解释不清楚为什么要这个。</p>
<p>具体的就是，第一，kuka的X12 I/O 控制口，需要提供给设计公司X12的每一I/O口的引脚（也是55针），哪些是输入，哪些是输出，哪些是电源，哪些是接地。这些其实都是需要我去了解，让后和设计公司沟通，以便他们可以进行接线传感器，灯，抓爪。</p>
<p>由于之前我并没有这些硬件经验，再也没在kuka手册里看到这些内容，所以就没在意，从而导致在设计中期，去往设计公司看别人的装配效果时，自己的kuka部分毫无进展，反而另外两个EPSON基本安装好，当时心里真的是一万个***， 在韩国和外面的人做一个事情真的这么难吗！！！</p>
<p>去公司几次之后，终于忍不住，直接告诉韩国人必须对我的kuka上心，否则直接汇报教授。这样才一步一步慢慢完成一些工作。</p>
<p>包括，X12接口，kuka并不提供接头以及线，由于不想自己焊接，解决办法（自己想的）是直接从EPSON公司买接头，再网上买一个公母转换线，两者相连即可。这样最省事情！但是得注意EPSON和库卡的55针相匹配。</p>
<p>接着的问题是，实际测试时，有的sensor和灯的IO接线并不对,归根结底还是和公司的沟通问题。在韩国人的帮助下，最后系统总算是组装完毕，基本的IO也正常。期间</p>
<ol>
<li><p>更换过一次电源，因为在测试灯和传感器时，24v, 27v,以及PNP还是NPN类型（即高电平还是低电平触发），可能是自己接线不小心短接了，导致电源坏了。究其原因一是自己对这方面不了解，二是工具贫乏，导致测试环境恶劣。</p>
</li>
<li><p>内部电源还是外部电源，因为kuka控制器内部提供电源，设计公司也提供了电源接线，这两部分会导致冲突，最后在咨询kuka之后，决定用kuka内部电源给其他设备供电，期间又损坏保险丝，以及导致beckhofer IO module故障，遂再次进行更换，并从kuka控制器电路板上面接出电源线<br>到设计公司留出来的正负极。中间还是自己手动接线！！！最后还是sensor的mapping有点问题，改改到正确接线就好。究其原因一是自己没有好好了解kuka控制器内部结构，二是沟通问题导致出现各种小错误。</p>
</li>
</ol>
<p>关于gripper, gripper也是一个很复杂的控制，必须得读文档，了解需要几根IO口来进行控制，如何通过IO控制其开和闭。这些是韩国人搞清楚的，我直接用就行，因为这时我在搞<strong>一个叫做sequence diagram的东西。很是花了时间和精力。</strong>因为教授觉得先应该理论上搞定所有逻辑，和信息从哪里传到哪里，然后实际实现完全按照理论来进行即可。试问对于新东西，怎么可能在什么都不知道的情况下，不动手操作，就可以理论的描绘出所有事情！！！这是一个有项目经验的人该有的理念吗！还有，什么是实际的信息流，什么是理论的信息流，这两者并不是完全相吻合的！！！与其浪费时间做这些没用的事情，还不如实际操作，出问题进行有效的沟通。但并不是说在实际做之前不进行理论的规划。</p>
<p>写到这里，深知一个团队里面的沟通，以及一个懂技术的领导的重要性。</p>
<p>期间还有一件事情就是，转台都已经做好了，教授觉得不像PnP,于是又提出一种抓取方案，并要我们想如何花最少成本去改进转台，试问一个并不是PnP的东西，换一个抓取方案就可以是PnP了吗？？？一浪费钱，二显示出自己的业余。（不过有时候，在让别人理解自己做的事情时，他还是会有好的想法如何去更清楚的传递信息给别人）。</p>
<p>总的来说，要求一直在变，一直在提高，这就导致事情多，可能无法按照进度完成。（参加2020年的德国汉诺威展览，不记得是什么时候有的这个目标，不过2019年他们是去参观过汉诺威的。）</p>
<h2 id="关于KUKA机器人"><a href="#关于KUKA机器人" class="headerlink" title="关于KUKA机器人"></a>关于KUKA机器人</h2><p>不可否认，即使在无法和其他人交流的情况下，自己通过操作机器人，还是学到了很多东西，增加了一些硬件经验。虽说过程是一步一步摸索，有时候些许痛苦一些。不过以后应该将其看淡，关注事情本身，不要产生太多情绪。（即使有）</p>
<p>KUKA的产品的确不错（从后面的测试可以知道），只是售后服务（不提供某些配件）差一点。</p>
<p>KUKA机器人控制器可以通过Ethernet/TCP 和外部通信（EthernetKRL），当然也可以采用其他通信方式，比如EtherCat，也就是采用PLC控制吧。说到这里，kuka的“外部自动模式”还没搞清楚怎么使用（接外部控制器，如PLC）。当时摸索EthernetKrl也是用了很久，也和kuka工程师通过几封邮件。试想，如果直接和工程师面谈，一下午时间，所有的疑惑不就可以解决吗！何必浪费那么多时间呢。</p>
<p>在进行KRL编程时（.src 和.dat文件），参见了网上的一个源码实例，一个需要注意的问题是，应该先创建KRL代码，然后再进行手动示教添加运行代码。</p>
<p>其次，KRL通过TCP和外部TCP server进行通信时传输的是XML格式的数据，KRL有一个内部XML模板，按照这个模板解析和封装数据。</p>
<p>KRL程序我感觉就是一个低配版的c语言，它不能很好地支持复杂的逻辑（比如if…else语句不能有超过十个的分支吧，实测），因此我只能想办法在有限的逻辑内完成机器人的抓取工作。还好可以完成。</p>
<p>其次，kuka没有提供KRL的详细的语法，所以也是只能摸索，出现bug，调试直到没有bug.</p>
<p>具体的详细kuka编程的经验可以参见当时做的手记，学习历程可以参见每周开会的PPT。</p>
<p>目前对于kuka的学习孩子是初级的，我们做的所有东西都感觉只停留在了初级的水平（初级意思是能使用其基本功能）。</p>
<h2 id="整体的项目测试"><a href="#整体的项目测试" class="headerlink" title="整体的项目测试"></a>整体的项目测试</h2><p>在开始编写各部分代码实现各部分功能时，重要的问题是：<strong>如何保证每个机器人和转台进行无错误的完美合作？控制逻辑是什么？机器人怎么知道转台停了？转台又是怎么知道机器人完成了动作？如何用最简单的代码实现这些功能？</strong></p>
<p>为了搞清楚这些问题，自己一个人单独进行了思考（比如UI往下面发送S1,S2,S3,以及T1,T2,T3来安排机器人的合作），思考很多，规划很多（见A4纸手记），一方面得告诉韩国人自己的想法（从代码层次描述），另一方面还要告诉教授（从高层次上如AAS描述）,真的是难搞！</p>
<p>思考了很多，比如用最愚蠢的sleep()的方式，还有，起初教授是不允许有转台每次转换时都回到home位置的，这就难办了，为此，我还花费时间想怎样让转盘知道最后是哪个robot 完成的抓取工作，好让下一回合转盘转到下一个即将工作的robot（见手记）。</p>
<p>自己心都操碎了，不知道韩国人到底思考过没有。</p>
<p>当意识到必须把韩国人抓着一起讨论时，事情才慢慢变得明朗起来。</p>
<p>一个硬件上的问题是，传感器只连接到了对应的robot，并没有同时连接到转台（传感器应该可以同时输出到多个信号吧），也就是说转台并不知道物体的位置。所以问题不能在底层得到解决。</p>
<p>移到上层，就只能到最顶端的OPC UA client里面，就是说client里要进行频繁的读写操作，来传递信息（比如kuka传给EPSON1信号）。这就给整个系统造成了极大地通信压力，任何一个环节出现错误，整个系统就无法正常运行，并且很难排查问题出在了哪里。</p>
<p>根据韩国人的想法，只进行简单的信息mapping是不够的，<strong>每一个robot在动之前需要和转台交互确认后，再开始动，并且在最后一步完成时要告诉转台</strong>详见代码以及手记。</p>
<p>其实韩国人搞事情是不错的，我真的想不出来这样复杂的交互（做之前还质疑这个行不行），而是简单的采用覆盖的方法（写进一个有用的值后，立马写另外一个无用值，以保证OPC UA 值只传输一次，并且这种方法感觉不靠谱！）。</p>
<p>事实证明韩国人的想法是可行的。</p>
<h3 id="开始测试"><a href="#开始测试" class="headerlink" title="开始测试"></a>开始测试</h3><p>从开始进行测试到测试结束，也就只用了两个星期左右，而且测试也只是在晚上进行，所以还是算顺利的。</p>
<p>由于我们的系统太过于复杂，信息交互太频繁，所以我还是有点担心最后的效果能不能达到。初次测试，没抱多大希望，只是想发现问题。</p>
<p>这里又从韩国人（Changdae）身上学到一点：<strong>在项目结合测试时，一步一步的合并，不要所有的一股脑测试！</strong>这样是有利于排查bug的。</p>
<p>起初问题包括，</p>
<ol>
<li>韩国人改变了OPC UA node ID，问题就不用说了。</li>
<li>用TCP server 代替Web UI 进行测试，想要的效果是server发送一个S1，tcp client 可以持续的读取并且向下发送（此种情况下需要非阻塞的TCP,此处又见识到韩国人的代码功底，<strong>徒手改代码</strong>），这个问题调了大概两个晚上（主要是韩国人）。</li>
<li>OPC UA mapping出现混乱，以及垃圾值（这个详见前期文章），更改OPC UA client 代码。</li>
<li>重新组织OPC client代码，使其更为精简（我写的太复杂了！）</li>
<li>KUKA的UDP转TCP程序里面 strncpy( , ,1)函数限制了只传输一位命令，导致robot收不到两位的命令。</li>
</ol>
<p>大概就是以上这么些问题，还有EPSON控制器程序在TSN下出现掉线的情况，以及其程序bug导致第一次抓取失误。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>回顾这一年，时间都花在这个项目上，抛开这个项目本身的价值不谈，就当它是一个目标，可以说这一年经过大家的努力，基本算实现了它。虽然大家都有过痛苦的时刻。</p>
<p>感谢大家在这一年中的贡献！</p>
<p>这一年我本人还是体会到了以前没体会过的东西，虽说能力可能没那么快得到提高。</p>
<p>现在已经可以着手写文章了，最好可以发到一个期刊。好好想一下有哪些可以写的点，扬长避短。</p>
]]></content>
      <categories>
        <category>project</category>
      </categories>
      <tags>
        <tag>note</tag>
        <tag>PnP</tag>
      </tags>
  </entry>
  <entry>
    <title>USA Visa B1/B2 Application</title>
    <url>/2019/12/26/14-USA-Visa/</url>
    <content><![CDATA[<p>今天做完了EVUS登记，就算是完成了去美国参加IEC TC65 WG17 meeting 之前的所有的准备工作。此次记录一下USA Visa的申请过程。</p>
<ol>
<li>2019年10月开始准备申请材料，由于实验室师姐有美签经验，遂很顺利的准备好了这一步，网上也有<a href="http://blog.sina.com.cn/s/blog_628d9fb30102wmj4.html" target="_blank" rel="noopener">申请攻略</a>。</li>
<li>网上预约面签时间，并缴费。</li>
<li>11月1日去往驻韩大使馆面签，带好所有材料后，进行面签，回答面试官的一些问题以便录入系统。</li>
<li>等签证结果（签证寄回）。</li>
<li>进入EVUS出发前的进行登记(免费)，如不进行登记是拿不到登机牌的。见<a href="https://zhuanlan.zhihu.com/p/34917543" target="_blank" rel="noopener">这里</a>。</li>
</ol>
<p>最后：</p>
<p>因为我是当场就拿到了结果，面试官直接告诉我等两三天就可以收到签证，并且没有接受我准备的纸质材料。</p>
<p>这种情况下我收到的是十年签证，所以必须进行第五步。</p>
<p>申请材料里不包含保险证明，包含酒店预订，不包含机票预订（但是可以有准备定的机票信息）</p>
<p>具体的参见申请材料清单以及<a href="https://kr.usembassy.gov/visas/" target="_blank" rel="noopener">驻韩美国大使馆网上</a>的<a href="https://www.ustraveldocs.com/kr/kr-niv-typeb1b2.asp" target="_blank" rel="noopener">说明</a>，还是比较简单的。</p>
]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>USA</tag>
        <tag>Visa</tag>
      </tags>
  </entry>
  <entry>
    <title>C 语言笔记</title>
    <url>/2019/12/24/13-C-language-note/</url>
    <content><![CDATA[<p>下面是在学习C时值得记录的话：</p>
<ol>
<li><p>内存条， 元器件， 这些元器件，实际上就是电路；电路的电压会变化，要么是 0V，要么是 5V，5V 是通电，用1来表示，0V 是断电，用0来表示。所以，一个元器件有2种状态，0 或者 1。1个元器件称为1比特（Bit）或1位</p>
</li>
<li><p><code>#include</code>命令的作用也仅仅是将头文件中的文本复制到当前文件，然后和当前文件一起编译</p>
</li>
<li><p><code>int a;</code>这个语句的意思是：在内存中找一块区域，命名为 a，用它来存放整数。</p>
</li>
<li><p>除了C语言，Java、C++、C#等在定义变量时也必须指明数据类型，这样的编程语言称为<strong>强类型语言</strong>。而PHP、JavaScript等在定义变量时不必指明数据类型，编译系统会自动推演，这样的编程语言称为弱类型语言。强类型语言一旦确定了数据类型，就不能再赋给其他类型的数据，除非对数据类型进行转换。弱类型语言没有这种限制，一个变量，可以先赋给一个整数，然后再赋给一个字符串。</p>
</li>
<li><p>sizeof 用来获取某个数据类型或变量所占用的字节数，b 长度为4， 因为int是4字节。</p>
<pre><code>int b = 100;
sizeof(b);</code></pre></li>
<li><p>当数值过大或者过小时，超出的部分会被直接截掉，数值就不能正确存储了，我们将这种现象称为溢出（Overflow）。</p>
</li>
<li><p>char 是一个字符类型，是用来存放字符的，但是它同时也是一个整数类型，也可以用来存放整数</p>
</li>
<li><p>字符类型由单引号’ ‘包围，字符串由双引号” “包围。</p>
</li>
<li><p>其实在C语言中没有专门的字符串类型，我们只能使用数组或者指针来间接地存储字符串。</p>
<pre><code>char str1[] = &quot;http://c.biancheng.net&quot;;

char *str2 = &quot;C语言中文网&quot;;</code></pre></li>
<li><p>局部变量的默认初始值是随机的，是垃圾值，没有规律</p>
</li>
<li><p>printf(): %-9d表示以十进制输出，左对齐，宽度最小为9个字符</p>
</li>
<li><p>&amp;称为取地址符，也就是获取变量在内存中的地址</p>
<pre><code>scanf(&quot;%d %d&quot;, &amp;a, &amp;b);  // 获取用户输入的两个整数，分别赋值给变量 a 和 b
printf(&quot;%d %d&quot;, a, b);  // 将变量 a 和 b 的值在显示器上输出
scanf(&quot;%s&quot;, url); //url为字符串可以加&amp;也可以不加&amp;</code></pre></li>
<li><p>在[ ]里面要指明字符串的最大长度，如果不指明，也可以根据=后面的字符串来自动推算，一定要写作char url[30]，而不能写作char url[]</p>
</li>
<li><p>缓冲区（Buffer）又称为缓存（Cache），是内存空间的一部分。也就是说，计算机在内存中预留了一定的存储空间，用来暂时保存输入或输出的数据，这部分预留的空间就叫做缓冲区（缓存）。</p>
</li>
<li><p>switch 是另外一种选择结构的语句，用来代替简单的、拥有多个分枝的 if else 语句。</p>
</li>
<li><p>内存溢出 out of memory，是指程序在申请内存时，没有足够的内存空间供其使用，出现out of memory；</p>
</li>
<li><p>内存泄露 memory leak，是指程序在申请内存后，无法释放已申请的内存空间，一次内存泄露危害可以忽略，但内存泄露堆积后果很严重，无论多少内存，迟早会被占光。</p>
</li>
<li><p>memory leak会最终会导致out of memory！</p>
</li>
<li><p>字符数组实际上是一系列字符的集合，也就是字符串（String）。在C语言中，没有专门的字符串变量，没有string类型，通常就用一个字符数组来存放一个字符串。</p>
<pre><code>char str[30] = &quot;c.biancheng.net&quot;;  //没有字符串，只有字符数组</code></pre></li>
<li><p>字符数组的长度至少要比字符串的长度大 1，因为最后有’\0’</p>
<pre><code>char str[7] = &quot;abc123&quot;;</code></pre></li>
<li><p>C 函数不能嵌套定义</p>
</li>
<li><p>break</p>
<pre><code>1、return ：直接跳出当前的方法,返回到该调用的方法的语句处,继续执行
2. break：在循环体内结束整个循环过程
3. continue ：结束本次的循环，直接进行下一次的循环</code></pre></li>
<li><p>函数声明和函数定义不一样，头文件中包含的都是函数声明，而不是函数定义，函数定义都放在了其它的源文件中，这些源文件已经提前编译好了，并以动态链接库或者静态链接库的形式存在</p>
</li>
<li><p>在编译之前对源文件进行简单加工的过程，就称为预处理。以#号开头的命令称为预处理命令。</p>
</li>
<li><p>C语言提供了多种预处理功能，如宏定义、文件包含、条件编译等</p>
<pre><code>//不同的平台下引入不同的头文件
#if _WIN32  //识别windows平台
#include &lt;windows.h&gt;
#elif __linux__  //识别linux平台
#include &lt;unistd.h&gt;
#endif</code></pre></li>
<li><p>所谓宏定义，就是用一个标识符来表示一个字符串</p>
<pre><code>#define N 100</code></pre></li>
<li><p><code>#if、#elif、#else 和 #endif</code> 都是预处理命令。这种能够根据不同情况编译不同代码、产生不同目标文件的机制，称为条件编译。（联想到用 #if 0 来注释代码）</p>
</li>
<li><p>最后需要注意的是，#if 后面跟的是“整型常量表达式”，而 #ifdef 和 #ifndef 后面跟的只能是一个宏名，不能是其他的。</p>
</li>
</ol>
<p><strong>指针</strong></p>
<ol>
<li><p>计算机中所有的数据都必须放在内存中，我们将内存中字节的编号称为<strong>地址（Address）或指针（Pointer）</strong>。</p>
</li>
<li><p>CPU 访问内存时需要的是地址，而不是变量名和函数名！变量名和函数名只是地址的一种助记符，当源文件被编译和链接成可执行程序后，它们都会被替换成地址。编译和链接过程的一项重要任务就是找到这些名称所对应的地址。</p>
</li>
<li><p>需要注意的是，虽然变量名、函数名、字符串名和数组名在本质上是一样的，它们都是地址的助记符，但在编写代码的过程中，我们认为变量名表示的是数据本身，而函数名、字符串名和数组名表示的是代码块或数据块的首地址。</p>
</li>
<li><p>也就是说，定义指针变量时必须带 <code>*</code>，给指针变量赋值时不能带 <code>*</code>。</p>
</li>
<li><p>定义指针变量时的<code>*</code>和使用指针变量时的<code>*</code>意义完全不同。（<strong>用熟了就习惯了</strong>）</p>
<pre><code>int *p;
p = &amp;a;
*p = 100;</code></pre></li>
<li><p>数组指针： 数组名可以认为是一个指针，它指向数组的第 0 个元素。在C语言中，我们将第 0 个元素的地址称为数组的首地址。</p>
</li>
<li><p>字符串指针：指向字符串的指针。此字符串分为“字符串数组”和“字符串常量”</p>
<pre><code>char str[] = &quot;http://c.biancheng.net&quot;;
char *pstr = str;

char *str = &quot;http://c.biancheng.net&quot;;</code></pre></li>
<li><p>字符串指针就是指向一个首地址而已。</p>
</li>
<li><p>C语言还有一种void指针类型，即可以定义一个指针变量，但不说明它指向哪一种类型数据。例如：</p>
<pre><code>void *p = malloc(2);</code></pre><p>在内存中分配2个字节的空间，但不确定它保存什么类型的数据。</p>
</li>
<li><p>strlen()函数求字符串长度。</p>
</li>
<li><p>sizeof(int) == 4 求的是字节。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>study</category>
      </categories>
      <tags>
        <tag>note</tag>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>谈C语言对项目的重要性</title>
    <url>/2019/12/23/12_c_language/</url>
    <content><![CDATA[<p>最近在紧张的进行PnP 项目测试，期间遇到不少问题，让我意识到一个PhD应该对C语言熟练掌握从而可以接管中大型项目，写出鲁棒性的代码。</p>
<p>起因是在Cloud PC里面运行的OPC UA Client， 因为需要不停地read/write, 所以复制了很多read/write 代码，问题就出在这，代码里包含指针，多段重复的代码（虽然一些变量名不一样）导致指针指向出现混乱，结果就是一些OPC node mapping不上，以及产生相互影响。</p>
<p>可能导致错误的代码如下：</p>
<pre><code>UA_Variant value; /* Variants can hold scalar values and arrays of any type */
UA_Variant_init(&amp;value);

//UA_String read
char en2[1024];
status = UA_Client_readValueAttribute(client, UA_NODEID_STRING(1, &quot;5edaf471-ae3c-4854-bcc3-a9340f6da7c2.epson1_state&quot;), &amp;value);  //change id
if (status == UA_STATUSCODE_GOOD &amp;&amp;
    UA_Variant_hasScalarType(&amp;value, &amp;UA_TYPES[UA_TYPES_STRING])) {
    UA_String* Variant2 = value.data;
    strncpy(en2, (*Variant2).data, (*Variant2).length);
    printf(&quot;reading the \&quot;Epson1_Table off state\&quot; = 0 is: %s\n&quot;, en2);
    }

//UA_String write to Table
char Control5[32];
strcpy(Control5, en2);
UA_String con5;
UA_String_init(&amp;con5);    
con5.length = strlen(Control5);
con5.data = (UA_Byte*)Control5;
//con1.data = (UA_Byte*)buffer; //TCP server to OPC client
UA_Variant_setScalarCopy(&amp;value, &amp;con5, &amp;UA_TYPES[UA_TYPES_STRING]);
UA_Client_writeValueAttribute(client, UA_NODEID_STRING(1, &quot;0a04cce4-a64a-4566-b916-06a8639d7dcd.epson1_to_table&quot;), &amp;value);  //change id
printf(&quot;writing \&quot;Epson1 off state\&quot; = 0 to Table: %s\n&quot;, con5.data);</code></pre><p>问题出在<code>&amp;value</code>这里，重复使用同样的value，会导致混乱吧。</p>
<p>以及这里<code>UA_String* Variant2</code>。</p>
<p>说到底就是对OPC UA或者说C 不了解。</p>
<p>在常德重新写代码之后，问题便得到了解决，回过头来想，必须深层了解C, 遂打算好好学学。</p>
<p>C语言中文网的编辑说的很有道理：</p>
<blockquote>
<p>从C语言到内存，从内存到进程和线程，环环相扣：不学C语言就吃不透内存，不学内存就吃不透进程和线程。</p>
</blockquote>
<p><strong>遇到的一些问题随手做下记录：</strong></p>
<p>strcpy 和 strncpy区别， 复制的位数。</p>
]]></content>
      <categories>
        <category>project</category>
      </categories>
      <tags>
        <tag>note</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 提交谷歌搜索收录</title>
    <url>/2019/12/13/8-hexo-google-record/</url>
    <content><![CDATA[<p>下午花了两个多小时试图配置博客以让谷歌搜索引擎收录，查看<a href="https://www.itrhx.com/2019/09/17/A48-submit-search-engine-inclusion/" target="_blank" rel="noopener">教程</a>，本以为是很简单的工作，没想到花了很久，还没弄好，问题出在用 Google Search Console 提交站点地图时出现 “无法获取”的状态， 正常情况下是 “成功”。</p>
<p>查了好久也，没找到原因,明天再试试吧，这里仅记录一下过程</p>
<p>1、跟着教程一系列操作就行。</p>
<p>2、中间回忆起来自己把域名搭在freenom上面，期间需要在此网站上验证域名，即添加谷歌生成的一串txt验证。</p>
<p>3、期间还需对站点的config配置文件进行配置等(也不知道有的配置到底起作用没)，可参见网上其他添加百度谷歌收录等帖子。</p>
<p>4、生产sitemap站点地图时，<strong>不要用网上的网站生成再放到博客根目录下</strong>，直接用命令安装插件：</p>
<pre><code>npm install hexo-generator-sitemap --save</code></pre><p>会自动生成sitemap.xml 文件的。</p>
<p>5、博客的根目录，如需要，可以将需要放在根目录的文件放在 public 文件夹下，因为public文件夹会部署到GitHub上。</p>
<p>6、很多方法都试过，包括<a href="https://javahikers.github.io/2019/06/16/hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%94%B6%E5%BD%95%E8%B0%B7%E6%AD%8C%E7%9A%84%E8%AF%A6%E7%BB%86%E8%BF%87%E7%A8%8B/" target="_blank" rel="noopener">添加robots.txt</a>, 还是没弄好。难道真的是谷歌问题，要等它定期检查网站吗！</p>
<blockquote>
<p>“robots.txt”文件会告诉搜索引擎它们是否可以访问您网站的各个部分并执行抓取。</p>
</blockquote>
<p>7、问题描述：google search console couldn’t fetch sitemap</p>
<h2 id="更新："><a href="#更新：" class="headerlink" title="更新："></a>更新：</h2><p>由于站点地图没有成功部署，心有不甘，今天搜索“谷歌网站验证成功但是站点地图失败”偶尔发现一篇<a href="https://www.wzblog.fun/posts/935f4e25/" target="_blank" rel="noopener">博文</a>，于是按照这做了一遍试一试，将所有的yexun.ml换成hanyangyexun.github.io, 没想到成功了。</p>
<p>所以现在hanyangyexun.github.io的站点地图是成功的，那么应该会被谷歌索引，而yexun.ml的地图没有成功，会被谷歌索引吗？</p>
<p>刚发现谷歌已经收录了所有的yexun.ml网页，而github.io也被收录， 最后的效果达到了。</p>
<p>只是没想到实现过程是这个样子稍有曲折！</p>
<p>所以是不是可以再把上文的hanyangyexun.github.io换成yexun.ml试试呢。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>我觉得问题还是在验证网页所有权时，应该<strong>选择第二种网址前缀而不是第一种网域</strong>。因为谷歌可能在站点地图提交时有bug未解决！</p>
<h3 id="彩蛋"><a href="#彩蛋" class="headerlink" title="彩蛋:"></a><a href="https://github.com/Louiszhai/Louiszhai.github.io/issues/5" target="_blank" rel="noopener">彩蛋:</a></h3><blockquote>
<p>听起来感觉你可能不太熟悉hexo，hexo中写markdown文章，直接在其source/_post目录新增<em>.md即可，完成后hexo g打包编译，hexo d上传就行。之所以能*</em>将打包到public目录的文件上传到github**，主要是因为config.yml文件中包含如下配置：</p>
</blockquote>
<pre><code>deploy:
    repo: git@github.com:......git</code></pre><p>所以每次hexo g d命令的意思是先打包再上传！</p>
<h2 id="更新2："><a href="#更新2：" class="headerlink" title="更新2："></a>更新2：</h2><p>紧接着又想把百度收录实现，参见<a href="https://www.itrhx.com/2019/09/17/A48-submit-search-engine-inclusion/" target="_blank" rel="noopener">1</a>和<a href="https://blog.csdn.net/qq_36759224/article/details/100879609" target="_blank" rel="noopener">2</a>. 一通操作说是必须把代码部署到<a href="https://yexun.coding.net/p/yexun/cd/website/static" target="_blank" rel="noopener">coding</a>, 百度才可访问，但是有的<a href="http://duansm.top/2018/08/08/hexo-sitemap/" target="_blank" rel="noopener">教程</a>直接就开始提交百度站点了，这是为什么？</p>
<p>百度站长和coding都是需要手机号验证的，哎，烦！</p>
]]></content>
      <categories>
        <category>web tech</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 翻页显示问题</title>
    <url>/2019/12/13/7-hexo-fanye-problem/</url>
    <content><![CDATA[<p>今天翻博客时发现在博客底部的翻页出现显示问题。</p>
<p>问题描述在 <a href="https://github.com/hexojs/hexo/issues/3794" target="_blank" rel="noopener">这里</a>.</p>
<p>解决方法在 <a href="https://github.com/theme-next/hexo-theme-next/blob/master/layout/_partials/pagination.swig" target="_blank" rel="noopener">这里</a>.</p>
]]></content>
      <categories>
        <category>web tech</category>
      </categories>
      <tags>
        <tag>note</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>再遇 Nginx Web Server</title>
    <url>/2019/12/12/9-nginx-web-server/</url>
    <content><![CDATA[<p>下午准备在Ubuntu 上测试一下 Android app 的 Restful 获取Nginx web server上面的xml 数据， 距离上次项目搞Nginx 过去了接近一年，于是先回顾了Nginx的安装配置过程， 这里记录再次使用nginx 遇到的问题。</p>
<h2 id="1-Nginx"><a href="#1-Nginx" class="headerlink" title="1. Nginx"></a>1. Nginx</h2><p>自己的Ubuntu上已经安装过Nginx，但是还发现已安装Openrestry, 回想起来是上次项目， 实验室师兄帮忙安装过，原因是上次的app 死活连接不上xml data, 弄很久，师兄给换了Openrestry, 说是和Nginx差不多。</p>
<p>时至今日我已经记不得怎么操作openrestry, 从哪里配置文件路径等，弄很久没弄明白，于是想原因可能是Nginx 和 openrestry 发生冲突，遂想卸载openrestry.</p>
<p>因为一打开浏览器的localhost 就出现openrestry的消息。</p>
<p>网上居然没有卸载方法， 只找到<a href="https://github.com/openresty/lua-nginx-module/issues/642" target="_blank" rel="noopener">一个</a>, 删除了相关文件夹。之后想让localhost出现Nginx的消息，于是想一并卸载重装，遇到不少问题。</p>
<p>通过网上的<a href="https://segmentfault.com/a/1190000014027697" target="_blank" rel="noopener">方法</a>卸载后，重新安装是出现报错，虽然可以查询到Nginx的版本信息，但是肯定是没有安装好的, 尝试了很多重复的命令无果， 于是想着重启Ubuntu<a href="https://stackoverflow.com/questions/50599808/nginx-installation-error" target="_blank" rel="noopener">再试</a>， 重新安装后果然成功， localhost出现“welcome to Nginx”, 虽然不知道是什么原因，也不愿意去仔细分析报错原因，总归问题得到了解决！</p>
<p>总结：耗费一下午卸载了Openrestry 和 Nginx, <a href="https://www.jianshu.com/p/d9f886a9666a" target="_blank" rel="noopener">重装</a>了Nginx。</p>
<p>在重装使用Nginx时，发现在配置文件里：</p>
<pre><code>root /home/xx/share; # 存放文件的目录</code></pre><p><strong>这里的xx应该替换为用户名yexun</strong></p>
<p>因为查看home的路径时，先得进入用户名。</p>
<p>突然意识到Openrestry应该没问题，只是我的路径没配置好。</p>
<p><strong>哎，以后还是把问题搞清楚了后，再采取行动，不要盲目照搬照套！先理解再做！</strong></p>
<h2 id="2-xml文件无法在浏览器加载"><a href="#2-xml文件无法在浏览器加载" class="headerlink" title="2. xml文件无法在浏览器加载"></a>2. xml文件无法在浏览器加载</h2><p>如遇此情况，去掉行首的：</p>
<blockquote>
<?xml version="1.0" encoding="utf-8"?>
</blockquote>
<h2 id="3-学会描述问题"><a href="#3-学会描述问题" class="headerlink" title="3. 学会描述问题"></a>3. 学会描述问题</h2><p>有时候你遇到问题但是并不知道怎么去描述它，何谈去网上搜索解决办法？比如：</p>
<blockquote>
<p>how to consume data in rest api that returns xml data in android</p>
</blockquote>
]]></content>
      <categories>
        <category>project</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Studio 使用笔记</title>
    <url>/2019/12/11/10-androidstudio-note/</url>
    <content><![CDATA[<p>这里记录在使用Android Studio 开发 AAS app 时遇到的一些值得记录的问题。</p>
<p>“遇到问题 - 查询解决问题 - 记录问题” 这才是正确的方式。以免在然后遇到相同问题还得再花时间查询解决。</p>
<p>自己写的技术文档真的是一个好东西，可能短时间你不会用到它，若干时间记忆退却之后，它能让你迅速想起。</p>
<p>1、AS 打开<strong>本地项目</strong></p>
<p>直接关掉当前项目，然后 “open an existing project” 就行。</p>
<p>如若要导入一个<strong>外来项目</strong>， 则需要检查相关配置文件，详见 <a href="https://blog.csdn.net/qq_34055875/article/details/79022443" target="_blank" rel="noopener">谷歌</a>。</p>
<p>2、Project setup: reading from cache</p>
<p>打开本地项目后，Event Log 出现： Project setup: reading from cache…</p>
<p><a href="https://www.cnblogs.com/5igis/p/5igis_12502.html" target="_blank" rel="noopener">解决方法</a>：打开项目的gradle.perperties文件，添加一行: </p>
<blockquote>
<p>org.gradle.configureondemand=false</p>
</blockquote>
<p>3、真机调试</p>
<p>连接USB打开开发者选项， 直接Run一下就可进行build - run- install.</p>
<p>4、同一设备上安装多个相同的apk，便于调试</p>
<p>参考<a href="https://blog.csdn.net/u012416928/article/details/47355553" target="_blank" rel="noopener">这里</a>, 在 <code>build.gradle(Module: app)</code> 文件里添加：</p>
<pre><code>debug {

        applicationIdSuffix &quot;debug&quot;

    }</code></pre><p>修改 “debug”值就可以。</p>
<p><a href="https://blog.csdn.net/kingmax54212008/article/details/82842089" target="_blank" rel="noopener">这里</a> 有解释。</p>
<p>注： 之前我的这个文件里是没有这段代码的，所以我直接添加了这段代码。</p>
<p>其他方法还有修改包名之类的，看起来很复杂，便没有尝试。</p>
]]></content>
      <categories>
        <category>project</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>AAS</tag>
      </tags>
  </entry>
  <entry>
    <title>phd-toberead</title>
    <url>/2019/12/08/01_phd-toberead/</url>
    <content><![CDATA[<p>This post contains Internet articles introducing knowledge that I should know in electronic major, when I am free, I should check them.</p>
<p>1、<a href="http://www.steves-internet-guide.com/http-basics/" target="_blank" rel="noopener">Understanding HTTP Basics</a>.</p>
<p>2、<a href="https://seekbetter.me/" target="_blank" rel="noopener">中国个人独立博客</a>.</p>
<p>3、知乎：<a href="https://www.zhihu.com/question/27368268" target="_blank" rel="noopener">计算机专业大学生应该在大学四年踏实学哪些东西?</a>.</p>
<p>4、进程间通信之共享内存（IPC-shared memory）: <a href="https://www.cnblogs.com/youngerchina/p/5624525.html" target="_blank" rel="noopener">参考</a>. 进程间通信和   <a href="http://www.cleey.com/blog/single/id/790.html" target="_blank" rel="noopener">多线程</a> 的区别是什么？</p>
<p>5、知乎好问题：<a href="https://www.zhihu.com/question/67473950" target="_blank" rel="noopener">为什么有的人年纪轻轻却思想深度远高于常人？</a>.</p>
<blockquote>
<p>尼采说过“当你凝视深渊的时候，深渊也在凝视你”。</p>
</blockquote>
<blockquote>
<p>那些很多思想极其有深度的人，思想带给他们的，往往是一面阳光一面悲伤。</p>
</blockquote>
<blockquote>
<p>但不管是哪一面，我们往往没看到，他们更早之前在深渊边缘摸爬滚打的样子。白天的风轻云淡，或许深夜就会掩涕长叹。</p>
</blockquote>
<blockquote>
<p>没有什么是不需要代价的，一切人格都来自于过往的经历，更何况是有深度的思想，这种无形却重于泰山的东西，怕是要看过千山万水世间百态罢。</p>
</blockquote>
<p>作者：Layne<br>链接：<a href="https://www.zhihu.com/question/67473950/answer/833637790" target="_blank" rel="noopener">https://www.zhihu.com/question/67473950/answer/833637790</a><br>来源：知乎</p>
]]></content>
      <categories>
        <category>PhD</category>
      </categories>
      <tags>
        <tag>major</tag>
        <tag>updating</tag>
        <tag>study</tag>
      </tags>
  </entry>
  <entry>
    <title>关于 phd 的道理</title>
    <url>/2019/12/06/0_phd-daoli/</url>
    <content><![CDATA[<ul>
<li><p>相较于年轻或中年教授，选择即将退休的教授当你的 advisor， 大多数情况下， 你会在寻找 research topic 的时候感到毫无头绪， 因为他并不能给你提供好的idea， 或者说他没有和你一起搞research。所以尽量选择年轻的，有根基的实验室和导师， 和他一起进步，他评选教授拉项目，而你顺利拿到你的博士学位。</p>
</li>
<li><p>在工作中，应该避免出现做无用功的情况，例如遇到不可避免的繁冗易错枯燥的事情（比如AML Editor之类），先想清楚再下手，。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>PhD</category>
      </categories>
      <tags>
        <tag>updating</tag>
        <tag>thought</tag>
      </tags>
  </entry>
  <entry>
    <title>How much money I spent on sneaker</title>
    <url>/2019/12/06/6-buy-shoes/</url>
    <content><![CDATA[<p>It is time to calculate how much money (KRW) I have spent on basketball shoes since last year.</p>
<p>The following is a list:</p>
<ul>
<li><p>Adidas Marquee boost low: 5,5000 (original price: 18,9000)</p>
</li>
<li><p>Adidas Harden Vol.2 (3p): 7,5000 + 7,5000 + 5,0000 = 20,0000 (original price: 18,9000)</p>
</li>
<li><p>Adidas DAME 4 (2p): 4,7000 + 4,7000 = 9,4000 (original price: 15,9000)</p>
</li>
<li><p>NIKE Lebron XVI (1p): 11,9000 (original price: 23,9000)</p>
</li>
<li><p>NIKE Lebron XVII: 22,7000 (original price: 23,9000) (Do not buy New Arrival Shoes any more!)</p>
</li>
<li><p>NIKE ZK4: 1000 RMB</p>
</li>
<li><p>LiNing WOW 7: 1000 RMB</p>
</li>
<li><p>NIKE PG3: 12,9000 (original price: 13,9000)</p>
</li>
<li><p>Adidas Harden Vol.3: 8,9000 (original price: 19,9000)</p>
</li>
<li><p>NIKE Lebron XVI Low (1p): 19,9000 (original price: 20,9000)</p>
</li>
<li><p>NIKE Air Jordan XXXII: 15,0000 (original price: 22,9000)</p>
</li>
<li><p>NIKE Air Jordan XXXII Low: 10,0000 (original price: 20,9000)</p>
</li>
<li><p>NIKE Kyrie 5: 14,9000 (original price: 14,9000) (gift from my girlfriend)</p>
</li>
</ul>
<br/>
Besides, I bought some shoes from Wechat:

<ul>
<li><p>NIKE Lebron XIII: 600 RMB</p>
</li>
<li><p>NIKE Lebron Soldier X: 600 RMB</p>
</li>
<li><p>Adidas Rose 7: 600 RMB</p>
</li>
</ul>
<p><strong>Totally 19 pairs.</strong></p>
<br/>
I returned some shoes (NIKE KD 12, NIKE ZK4, NIKE AJ3, NIKE Kyrie 6.) to NIKE because all kinds of reasons (size, quality).

<p>These are expensive shoes I have bought. I also bought some cheap shoes for casual wearing (LiNing, PEAK, ANTA).</p>
<p><strong>Totally 1,2800 RMB:</strong></p>
<p><strong>KRW: 151,1000 = 9000 RMB</strong></p>
<p><strong>RMB: 3800</strong></p>
<br/>
That's amazing!


<p>I still want two more shoes that I did not buy before:</p>
<ul>
<li>NIKE Lebron XV</li>
<li>NIKE Air Jordan XXXI </li>
</ul>
<p><strong>What can I do?</strong></p>
<p><strong>But I love all my shoes!</strong></p>
<hr>
<p>彩蛋：</p>
<p>　　一个简单的教程<a href="https://www.jianshu.com/p/617b59b36b85" target="_blank" rel="noopener">怪木西西写的Markdown教程</a>.</p>
]]></content>
      <categories>
        <category>life</category>
      </categories>
      <tags>
        <tag>hobby</tag>
      </tags>
  </entry>
  <entry>
    <title>添加图片</title>
    <url>/2019/12/06/4-image/</url>
    <content><![CDATA[<p>此次记录在markdown 中添加图片的过程。</p>
<h2 id="1-GitHub-图片仓库"><a href="#1-GitHub-图片仓库" class="headerlink" title="1. GitHub 图片仓库"></a>1. GitHub 图片仓库</h2><p>可以在GitHub上创建一个仓库来专门存放图片，参见<a href="https://segmentfault.com/a/1190000018734982" target="_blank" rel="noopener">教程</a>。</p>
<p>一，建立项目后，将项目clone到自己本地 (我的是/g/Blog/MyPics)：</p>
<pre><code>git clone https://github.com/hanyangyexun/MyImages.git</code></pre><p>二，找到一张图片放到克隆的项目中。</p>
<p>三，在项目根路径下，打开git bash，提交项目到GitHub：</p>
<pre><code>XunYe@XunYe-PC MINGW64 /g/Blog/MyPics/MyImages (master)
$ git add .
$ git commit -am 备注
$ git push</code></pre><p>四，然后就可以在GitHub上获取图片的链接了。</p>
<p>五，Markdown <a href="https://www.jianshu.com/p/280c6a6f2594" target="_blank" rel="noopener">图片语法</a>：</p>
<pre><code>![Alt text](图片链接 &quot;optional title&quot;)</code></pre><h2 id="2-测试"><a href="#2-测试" class="headerlink" title="2. 测试"></a>2. 测试</h2><p>用瓜哥的扣篮照片测试：</p>
<p><img src="https://raw.githubusercontent.com/hanyangyexun/MyImages/master/img_1/anthony.jpg" alt="anthony" title="瓜哥扣篮"></p>
<p>效果很好！</p>
<p>恭喜瓜哥在开拓者重回巅峰当老大！</p>
<p><strong>Get the fuck out of here!</strong></p>
<p>另，其实也可以直接用网上的图片链接（右键复制图片地址）：</p>
<p><img src="http://n.sinaimg.cn/sports/2_img/dfic/d8013d78/107/w683h1024/20191204/8fff-ikhvemx6267632.jpg" alt="瓜哥" title="新浪图片"></p>
<p>就看网上链接会不会失效了。</p>
<h2 id="3-总结"><a href="#3-总结" class="headerlink" title="3. 总结"></a>3. 总结</h2><p>应该熟练掌握GitHub的操作，新建项目，克隆项目到本地，以及提交到GitHub。</p>
<p>彩蛋：</p>
<ul>
<li><p>用 <code>&lt;br/&gt;</code> 可实现换行， 用反单引号实现代码块。</p>
</li>
<li><p>文本居中: <code>&lt;center&gt;这一行需要居中&lt;/center&gt;</code></p>
</li>
<li><p>段首缩进: </p>
</li>
</ul>
<blockquote>
<p>将输入法切换到全角模式，方法是在中文输入法下，按shift+space键切换，然后直接输入空格就可以了，这样输入的每个空格是一个中文字符距离。</p>
</blockquote>
]]></content>
      <categories>
        <category>web tech</category>
      </categories>
      <tags>
        <tag>note</tag>
      </tags>
  </entry>
  <entry>
    <title>最后的Hexo + NexT 配置</title>
    <url>/2019/12/05/3-Hexo-NexT/</url>
    <content><![CDATA[<p>在今天晚上对博客进行了应该是最后的配置，具体如下：</p>
<h2 id="1-文章结束语"><a href="#1-文章结束语" class="headerlink" title="1. 文章结束语"></a>1. 文章结束语</h2><p>在文章末尾加入 —-The End —- 标记。</p>
<p>参见网上文章，比如<a href="https://asdfv1929.github.io/2018/01/28/add-the-end/" target="_blank" rel="noopener">这个</a>。</p>
<h2 id="2-访客量和阅读量"><a href="#2-访客量和阅读量" class="headerlink" title="2. 访客量和阅读量"></a>2. 访客量和阅读量</h2><p>这个配置起来还是比较复杂的，涉及到不蒜子统计<a href="https://yfzhou.coding.me/2018/08/08/Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E6%B7%BB%E5%8A%A0%E7%BB%9F%E8%AE%A1%E8%AE%BF%E5%AE%A2%E9%87%8F%E4%BB%A5%E5%8F%8A%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%EF%BC%89/" target="_blank" rel="noopener">这里</a> 和 <a href="https://chrischen0405.github.io/2018/09/11/post20180911/" target="_blank" rel="noopener">这里</a>，以及LeanCloud统计。也可参见 <a href="https://yunhao.space/2018/06/27/hexo-leancloud-plugin-installation-tutor/" target="_blank" rel="noopener">1</a> 和 <a href="https://www.mdslq.cn/archives/d93ac7d.html" target="_blank" rel="noopener">2</a>。</p>
<p>两者区别是：</p>
<p><strong>“不蒜子统计站点的总访问量，即统计浏览了多少次；有多少人访问，在footer显示。</strong></p>
<p><strong>LeanCloud统计单篇博文的阅读量，即统计单篇博文的阅读量是多少。”</strong></p>
<p><a href="https://www.jianshu.com/p/702a7aec4d00" target="_blank" rel="noopener">这个</a>好像写的更清楚。</p>
<p>“关于Hexo的文章阅读量设置问题，大多数人都是使用不蒜子的代码实现。但是这个方法仅局限于在文章页面显示阅读数，首页是不显示的。看 <a href="https://blog.litao.work/2017/08/30/hexo-next%E6%B7%BB%E5%8A%A0%E8%AE%BF%E5%AE%A2%E9%87%8F/" target="_blank" rel="noopener">这个</a> 介绍如何在首页及文章页面都显示文章的阅读量。”</p>
<p>总之两者均配置完毕：</p>
<p><strong>我用不蒜子实现网站底部显示访问者和访问量（注释掉了配置文件中的文章阅读量），而用LeanCloud实现文章首页访问量。（总算大概搞清楚了两者的区别！！）</strong></p>
<p>话说回来统计这些对我来说好像也没多大用！</p>
<p><strong>一个问题：</strong>不蒜子统计不显示问题看 <a href="https://juejin.im/post/5cc11c55f265da038145dc75" target="_blank" rel="noopener">这里</a> 解决。</p>
<h2 id="3-gitment-换-gitalk"><a href="#3-gitment-换-gitalk" class="headerlink" title="3. gitment 换 gitalk"></a>3. gitment 换 gitalk</h2><p>因为在之前就配置好了gitment的评论功能，只是在最后测试时按照别人的套路：登录GitHub初始化评论，出现错误。然后发现网上都说换成gitalk好使，就查阅安装gitalk的方法，见<a href="https://cjjkkk.github.io/gitalk/" target="_blank" rel="noopener">这里</a> 和 <a href="https://blog.csdn.net/hyb612/article/details/78299971" target="_blank" rel="noopener">这里</a>。</p>
<p>发现此两者是相似的评论插件。都必须在GitHub上注册新应用。</p>
<p>进行相应的配置，deploy之后就可以正常使用gitalk了！！</p>
<p>注意：一定要deploy才可以看到效果，在本地是不行的。</p>
<h2 id="4-Gitalk-Error-Validation-Failed"><a href="#4-Gitalk-Error-Validation-Failed" class="headerlink" title="4. Gitalk Error: Validation Failed"></a>4. Gitalk Error: Validation Failed</h2><p>评论出现这个错误是因为 “由于label太长导致的无法评论”。</p>
<p>缩短markdown 文件的命名即可解决。</p>
<h2 id="5-总结"><a href="#5-总结" class="headerlink" title="5. 总结"></a>5. 总结</h2><p>添加和完善各种功能其实还是挺花时间的，但是程序这块，付出总有回报！</p>
]]></content>
      <categories>
        <category>web tech</category>
      </categories>
      <tags>
        <tag>note</tag>
      </tags>
  </entry>
  <entry>
    <title>个性化Hexo + nexT主题</title>
    <url>/2019/12/05/2-Hexo-nexT/</url>
    <content><![CDATA[<p>继昨天搭建好Hexo之后，就开始个性化一些主题设置，以完成基本的博客功能。</p>
<p>昨天下午写完第一篇之后，就开始着手个性化配置，查了网上的很多教程， 添加菜单栏， 侧边栏点击，文章宽度，字体，文章分割线， Read more，评论，添加本地搜索等等设置。</p>
<p>这里仅记录配置过程中遇到的一些问题及解决方法。</p>
<h2 id="1-菜单栏"><a href="#1-菜单栏" class="headerlink" title="1. 菜单栏"></a>1. 菜单栏</h2><p>首先需要注意的是我自己安装的是NexT 5.1.14版本（现在已经到了6, 7版了。），现在已经停止维护，但问题是我配置的时候依然会出现一些bug，停止维护应该说明成熟了没问题啊！</p>
<p>创建 归档，标签，关于 页面,参考<a href="https://sjq597.github.io/2018/05/15/Hexo%E4%BD%BF%E7%94%A8next-Pisces%E4%B8%BB%E9%A2%98/" target="_blank" rel="noopener">这里</a>：</p>
<pre><code>hexo new page categories
hexo new page tags
hexo new page about</code></pre><p>修改相应的index.md文件：</p>
<pre><code>---
title: categories
date: 2019-12-04 20:07:50
type: &quot;categories&quot;
comments: false
---</code></pre><p>以及：</p>
<pre><code>---
title: tags
date: 2019-12-04 20:10:14
type: &quot;tags&quot;
comments: false
---</code></pre><p>comment：false此行关闭当前页面的评论。</p>
<p>然后在主题配置文件里去掉相应的注释（以下是不可行的配置）：</p>
<pre><code>menu:
  home: / || home
  archives: /archives/ || archive
  categories: /categories/ || th
  tags: /tags/ || tags
  about: /about/ || user
  #schedule: /schedule/ || calendar
  #sitemap: /sitemap.xml || sitemap
  #commonweal: /404/ || heartbeat</code></pre><p>创建完毕后博客已经可以显示添加的菜单栏按钮， 只是点击时无法正常显示页面。处理了一晚上也无法解决。</p>
<p>最后发现问题在这，我必须配置成如下才能正常显示，比如：</p>
<pre><code>menu:
  home: /|| home</code></pre><p>而不是网上大部分人写的：</p>
<pre><code>menu:
  home: / || home</code></pre><p>区别是我需要去掉’/‘和‘||’之间的空格，否者怎么也不能正常显示，查看URL是：</p>
<pre><code>http://yexun.ml/tags/%20</code></pre><p>之类的，当然不能正确链接！！！（期间一度怀疑是自己的NexT主题安装位置不对导致链接path不对。）</p>
<p>注意：我所有的命令操作都是在Blog/blog下执行（这就是所谓的“站点根目录”？）</p>
<p>但是手动输入：</p>
<pre><code>http://yexun.ml/tags/index.html</code></pre><p>是可以正常显示的，显然是刚才的配置有问题。(下面是正常配置：)</p>
<pre><code>menu:
home: /|| home
archives: /archives/
categories: /categories/|| th
tags: /tags/|| tags
about: /about/|| user
#schedule: /schedule/ || calendar
#sitemap: /sitemap.xml || sitemap
#commonweal: /404/ || heartbeat</code></pre><h2 id="2-侧边栏"><a href="#2-侧边栏" class="headerlink" title="2. 侧边栏"></a>2. 侧边栏</h2><p>hexo 侧边栏上有三个标签 posts, categories, tags. 点击它们同样可以连接到菜单栏上面的 archive，categories， tags.</p>
<p>问题又来了，点击posts时跳转失败，和上面的一样出现不正确的URL。</p>
<p>又是查找半天原因，发现只有去掉标签的icon代码（如上）后可以正常点击。不知道为何会出现这样的bug!!</p>
<p>为了一致，索性去掉所有icon：</p>
<pre><code>menu_icons:
  enable: false</code></pre><p>到此博客的所有点击均正常。</p>
<h2 id="3-本地搜索"><a href="#3-本地搜索" class="headerlink" title="3. 本地搜索"></a>3. 本地搜索</h2><p>还需要一个搜索功能，同样找到网上的教程操作可以配置， 只是点击search后会弹出一个空白页面， 也是查找很久才找到<a href="https://blog.csdn.net/lihangll/article/details/103335246" target="_blank" rel="noopener">解决办法</a>：</p>
<p>“原因就是打开了外链，要么关了，要么就限定下作用域:</p>
<pre><code>external_link: 
  enable: true   
   field: post</code></pre><p>改成post完美解决！</p>
<h2 id="4-其它"><a href="#4-其它" class="headerlink" title="4. 其它"></a>4. 其它</h2><p>字体设置参考的<a href="http://theme-next.iissnan.com/theme-settings.html#categories-page" target="_blank" rel="noopener">这里</a>。</p>
<p>需要其它设置可以找Google。</p>
<h2 id="5-总结"><a href="#5-总结" class="headerlink" title="5. 总结"></a>5. 总结</h2><p>网上有很多博主都是用的Hexo + nexT来搭建自己的博客， 记录自他们己遇到的问题以供日后他人参考， 在这里表示感谢。</p>
<p>接下来就是了解怎么插入图片，以及其他的一些必须的配置了，比如说访客统计。</p>
]]></content>
      <categories>
        <category>web tech</category>
      </categories>
      <tags>
        <tag>note</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建我的第一个Blog</title>
    <url>/2019/12/04/1-my-first-blog/</url>
    <content><![CDATA[<h1 id="开始我的博客之旅"><a href="#开始我的博客之旅" class="headerlink" title="开始我的博客之旅"></a>开始我的博客之旅</h1><h2 id="1-Motivation"><a href="#1-Motivation" class="headerlink" title="1. Motivation"></a>1. Motivation</h2><p>在本周阅读阮一峰老师的<a href="http://www.ruanyifeng.com/blog/" target="_blank" rel="noopener">每日科技周刊</a>时，发现了GitHub上有人做了一个<a href="https://github.com/timqian/chinese-independent-blogs" target="_blank" rel="noopener">中文独立博客</a>的列表，上面列出了很多有着自己独立博客的作者（其中大部分是编程出身），花了大概两天的时间顺着列表一个一个的看着他们的博客，探索作者们的生活和学习经历， 希望从这些博客人身上找寻一些生活和工作的启发和灵感， 虽然我不是一个专业的程序员。 的确，我看到了许多让我印象深刻的记录， 发自心底地尊重这些促进互联网进步的人们，这也是启发我搭建自己的博客并且记录自己的心得的重要原因之一。 另外一个原因就是我也想拥有自己的网站，记录自己的生活点滴，真真正正为自己做一些事情。</p>
<p>其实早在<a href="https://pro.lurenzhi.cn/" target="_blank" rel="noopener">我的师兄</a>还未博士毕业时 (在这祝贺他找到自己心仪的工作！)，受到影响，自己也有搭建博客或网站的想法， 只是当时自己完全投身于所谓的research而没有话时间来做这件事情。 而现在也是趁着research的间隙来做这件事情， 发现这事儿也没有那么困难。</p>
<h2 id="2-Tools"><a href="#2-Tools" class="headerlink" title="2. Tools"></a>2. Tools</h2><p>这里记录搭建博客过程中用到的工具。 主要借鉴了<a href="https://zhangslob.github.io/2017/02/28/%E6%95%99%E4%BD%A0%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%8CHexo-Github/" target="_blank" rel="noopener">文章1</a>和<a href="https://zhuanlan.zhihu.com/p/26625249" target="_blank" rel="noopener">文章2</a>的经验。</p>
<p>注：以下带双引号的内容取自网络。</p>
<h3 id="2-1-Install-Node-js"><a href="#2-1-Install-Node-js" class="headerlink" title="2.1 Install Node.js"></a>2.1 Install Node.js</h3><p>其实自己的Windows 7 已经安装过Node.js， <strong>所以在照着教程安装软件之前应该检查一下自己电脑是否已经存在此软件， 避免重复工作。</strong> </p>
<p>以下摘自<a href="https://www.runoob.com/nodejs/nodejs-tutorial.html" target="_blank" rel="noopener">菜鸟教程</a>：</p>
<p>“简单的说 Node.js 就是运行在服务端的 JavaScript。Node.js 是一个基于Chrome JavaScript 运行时建立的一个平台。”</p>
<p>还必须安装npm:</p>
<p>“npm 是 Node.js 默认的、以 JavaScript 编写的软件包管理系统。”</p>
<h3 id="2-2-Github"><a href="#2-2-Github" class="headerlink" title="2.2 Github"></a>2.2 Github</h3><p>首先你得有一个GitHub的账号。（以前已注册）</p>
<p>然后右上角选择 Create a new repository ：<strong>yourname.github.io</strong>（第一次创建仓库）</p>
<h3 id="2-3-Install-Git"><a href="#2-3-Install-Git" class="headerlink" title="2.3 Install Git"></a>2.3 Install Git</h3><p>在Windows上安装Git参见<a href="https://www.liaoxuefeng.com/wiki/896043488029600/896067008724000" target="_blank" rel="noopener">廖雪峰老师Git教程</a>:</p>
<p>“Git是目前世界上最先进的分布式版本控制系统（没有之一）。</p>
<p>安装完成后，在开始菜单里找到“Git”-&gt;“Git Bash”。</p>
<p>安装完成后，还需要最后一步设置，在命令行输入：</p>
<pre><code>$ git config --global user.name &quot;Your Name&quot;
$ git config --global user.email &quot;email@example.com&quot;</code></pre><p>因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。”</p>
<h2 id="3-Install-Hexo"><a href="#3-Install-Hexo" class="headerlink" title="3. Install Hexo"></a>3. Install Hexo</h2><h3 id="3-1-Introduction"><a href="#3-1-Introduction" class="headerlink" title="3.1 Introduction"></a>3.1 Introduction</h3><p>“Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。”</p>
<p>很快就完成了Hexo的安装, 可能国内外限制有区别。</p>
<p>“Hexo就是我们的个人博客网站的框架， 这里需要自己在电脑常里创建一个文件夹，可以命名为Blog，Hexo框架与以后你自己发布的网页都在这个文件夹中。创建好后，进入文件夹中，按住shift键，右击鼠标点击命令行”：open command window here：</p>
<p><strong>我想shift+右键开启命令行可以快速的打开cmd并进入当前目录。</strong></p>
<p>“使用npm命令安装Hexo，输入”：</p>
<pre><code>npm install -g hexo-cli </code></pre><p>“安装完成后，初始化我们的博客，输入”：</p>
<pre><code>hexo init blog</code></pre><p><strong>注意，以下的命令都是作用在刚刚创建的Blog/blog文件夹。</strong></p>
<pre><code>命令简写
hexo n &quot;我的博客&quot; == hexo new &quot;我的博客&quot; #新建文章
hexo g == hexo generate #生成网页
hexo s == hexo server #启动服务预览
hexo d == hexo deploy #部署</code></pre><p>hexo s后， 访问<a href="http://localhost:4000/，便可以看到网站初步的模样，不要激动，我们还要把网页发布到Github上去。" target="_blank" rel="noopener">http://localhost:4000/，便可以看到网站初步的模样，不要激动，我们还要把网页发布到Github上去。</a></p>
<h3 id="3-2-Deploy-to-Github"><a href="#3-2-Deploy-to-Github" class="headerlink" title="3.2 Deploy to Github"></a>3.2 Deploy to Github</h3><p>“上面只是在本地预览，接下来要做的就是就是推送网站，也就是发布网站，让我们的网站可以被更多的人访问。在设置之前，需要解释一个概念，在blog根目录里的_config.yml文件称为<strong>站点配置文件</strong>“</p>
<p>“进入根目录里的themes文件夹，里面也有个_config.yml文件，这个称为<strong>主题配置文件</strong>“</p>
<p>“下一步将我们的Hexo与GitHub关联起来，打开站点的配置文件_config.yml，翻到最后修改为：”</p>
<pre><code>deploy:
type: &apos;git&apos; //注意这里我的git要加单引号
repo: 这里填入你之前在GitHub上创建仓库的完整路径，记得加上 .git
branch: master</code></pre><p>然后三条命令：</p>
<pre><code>hexo clean 
hexo g 
hexo d</code></pre><p>然后你的博客就上线在yourname.github.io.</p>
<p>除上面之外， 期间配置了SSH key:</p>
<p>重新打开CMD，输入：</p>
<pre><code>ssh-keygen -t rsa -C &quot;Github的注册邮箱地址&quot;</code></pre><p>一路Enter过来就好，得到信息：</p>
<pre><code>Your public key has been saved in /c/Users/user/.ssh/id_rsa.pub.</code></pre><p>找到该文件，复制里面的所有内容，然后进入<a href="https://github.com/settings/ssh" target="_blank" rel="noopener">GitHub</a>, 输入key.</p>
<p>在Git Bash中检测GitHub公钥设置是否成功，输入：</p>
<pre><code>ssh git@github.com</code></pre><p>“这里之所以设置GitHub密钥原因是，通过非对称加密的公钥与私钥来完成加密，公钥放置在GitHub上，私钥放置在自己的电脑里。GitHub要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了省去每次输入密码的步骤，采用了ssh，当你推送的时候，git就会匹配你的私钥跟GitHub上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。”</p>
<h3 id="3-3-Bind-Domain-Name"><a href="#3-3-Bind-Domain-Name" class="headerlink" title="3.3 Bind Domain Name"></a>3.3 Bind Domain Name</h3><p>可以在阿里云购买域名或者找到<a href="freenom.com">freenom</a>免费注册域名。</p>
<p>第一步， 我是参见网上的教程注册的一年期免费域名<a href="yexun.ml">yexun.ml</a>，以后再购买阿里云吧！</p>
<p>ping自己的 <a href="http://xxxx.github.io" target="_blank" rel="noopener">http://xxxx.github.io</a> 的ip地址， 将得到的IP地址添加到freenom里。到此GitHub就和你的域名联系起来了。</p>
<p>第二步， 登录GitHub，进入之前创建的仓库，点击settings，设置Custom domain，输入你的域名。</p>
<p>第三步， 进入本地博客文件夹 ，进入blog/source目录下，创建一个记事本文件，输入你的域名<a href="yexun.ml">yexun.ml</a>, 保存，命名为CNAME ，注意保存成<strong>所有文件</strong>而不是txt文件.</p>
<p>到此，执行hexo 三步命令后，在浏览器就可以访问到你的网站。</p>
<h4 id="3-3-1-A-problem"><a href="#3-3-1-A-problem" class="headerlink" title="3.3.1 A problem"></a>3.3.1 A problem</h4><p>某次deploy 后网站不能正常显示， 最后发现ping的IP和上次不一样， 所以当然不能访问到freenom记录的IP。</p>
<p>可是之后又变成原来的IP。奇怪的是我的GitHub IP应该是固定的啊？？？</p>
<h3 id="3-4-NexT-theme"><a href="#3-4-NexT-theme" class="headerlink" title="3.4 NexT theme"></a>3.4 NexT theme</h3><p>第一，下载主题：</p>
<p>在blog目录中（就是命令行的位置处于blog目录）打开命令行输入：</p>
<pre><code>git clone https://github.com/iissnan/hexo-theme-next themes/next</code></pre><p>第二， 打开站点的_config.yml配置文件，修改主题为next：</p>
<pre><code>theme: next</code></pre><p>第三， 打开主题的_config.yml配置文件，选择scheme：<br>    scheme： Pisces</p>
<p>再次部署网站，hexo g、hexo d，查看效果。</p>
<h2 id="4-Markdown"><a href="#4-Markdown" class="headerlink" title="4. Markdown"></a>4. Markdown</h2><p>以前听过这个，但是不知道具体是做什么用的， 而现在正在用着写博客。</p>
<p>先下载MarkdowmPad 2， 以后再慢慢了解复杂的语法，参见<a href="https://www.appinn.com/markdown/" target="_blank" rel="noopener">这里</a>。</p>
<h2 id="5-Others"><a href="#5-Others" class="headerlink" title="5. Others"></a>5. Others</h2><p>寻找图床，插入图片，音乐外链，背景等个性化设置以后再慢慢了解。</p>
<p>以后再更新，已经迫不及待发布这篇博客了。</p>
<h2 id="6-End"><a href="#6-End" class="headerlink" title="6. End"></a>6. End</h2><p>过去的两三年都是用笔记本手写记录一些学习笔记和任务等，用纸记录当然方便，只是笔记本不在身边时，想去查自己写过的一些东西就变成不可能了。</p>
<p>以后争取在这个平台记录自己， 很久没有用中文打字或者写一篇文档了， 措辞可能不优美，但是结构一定要完整。 但是感觉用英语写是不是还写得流利些呢！</p>
<p>以上就是自己搭建并写出第一篇博客的过程， 并没有话很久搭建， 写完这篇文章用了三个多小时。非常感谢Internet上有这么多分享知识的朋友们！ 科技推动社会进步， 而他们加速科技的传播。</p>
<p>写一篇纯文字长文还是很花时间的，写久了脖子还疼。</p>
<p>第一次写，有问题可以回过头来改正。</p>
<p>接下来就是个性化设置一下它。</p>
<p>一个问题：自己写的文档自己会看吗？</p>
]]></content>
      <categories>
        <category>web tech</category>
      </categories>
      <tags>
        <tag>note</tag>
      </tags>
  </entry>
  <entry>
    <title>test_my_site</title>
    <url>/2019/12/03/test-my-site/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>initial</category>
      </categories>
      <tags>
        <tag>testing</tag>
      </tags>
  </entry>
</search>
